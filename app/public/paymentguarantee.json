{
  "swagger": "2.0",
  "info": {
    "description": "<div class='program-description-paragraph'>Payment Guarantee provides you with zero fraud risk via our 100% guarantee on all approved transactions, as well as increases your approval rate. Our machine learning algorithms give us the confidence to stand behind our commitment to increase transaction approvals while pro-actively blocking fraudsters, despite the challenges of evolving fraud patterns.</div><div class='program-description-paragraph'>Before you start, check that you have your <b><a href = '/api-credentials' target = '_blank'> API credentials</a></b> ready and you are using the proper <b>URLs</b>. Once you are ready, it is recommended that you perform a quick <b>connectivity test</b>. The main steps of the integration are:</div><div class='program-description-list'><ul> <li>Implementing the <b><a href = '/device-fingerprinting' target = '_blank'>Device Fingerprint</a> & <a href = '/behavioral-analytics' target = '_blank'>Behavioral Analytics</a></b></li> <li>Implementing the Payment & Risk Decision Request and Response <b>APIs</b></li> <li>Creating your unique <b>Risk Profile</b></li> </ul></div><div class='program-description-paragraph'>The following diagram illustrates the processes within the Payment Guarantee API:</div><div class='program-description-diagram'><img class='program-diagram' alt='GuaranteedFlow' src= '%PUBLIC_URL%/assets/images/GuaranteedFlow.png' /></div>",
    "version": "1.0.0",
    "title": "Payment Guarantee",
    "termsOfService": "https://trustvesta.com/",
    "contact": {
      "name": "Customer Support",
      "url": "https://trustvesta.com/",
      "email": "vsafe.support@trustvesta.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/vSafe4_GatewayV4/GatewayV4",
  "tags": [
    { "name": "Required", "description": "Required API Calls" },
    { "name": "Optional", "description": "Optional API Calls" }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/AccountNumberToPermanentToken": {
      "post": {
        "tags": ["Optional"],
        "summary": "AccountNumberToPermanentToken",
        "description": "AccountNumberToPermanentToken exchanges a credit/debit card number for a <a href = '/tokenization' target = '_blank'>permanent token</a> that can be stored by you for repeated use. <br /> <b>Note</b>: You must store the token returned by this API. Our platform does not store the token for you.",
        "operationId": "AccountNumberToPermanentToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountNumberToPermanentToken_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountNumberToPermanentToken_Response"
            }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class AccountNumberToPermanentTokenRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/AccountNumberToPermanentToken')).POST('AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Password':'<Replace with your API Account credentials>').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/AccountNumberToPermanentToken');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Password':'<Replace with your API Account credentials>'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class AccountNumberToPermanentTokenRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Password':'<Replace with your API Account credentials>'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Password':'<Replace with your API Account credentials>'}' http://api.trustvesta.com/AccountNumberToPermanentToken ",
          "PHP": "function AccountNumberToPermanentTokenRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/AuthResult": {
      "post": {
        "tags": ["Required"],
        "summary": "AuthResult",
        "description": "Required if you use the <a href = ''>ChargePaymentRequest API</a>. <br /> After you authorize a transaction with your gateway/acquirer, use the AuthResult API to send the authorization results to our platform to receive the finalized Risk Probability Index, Risk Score, and IsGuaranteeable responses.",
        "operationId": "AuthResult",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthResult_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/AuthResult_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class AuthResultRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/AuthResult')).POST('AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCD':'1','AcquirerCVVResultCode':'M','AccountName':'<Replace with your API Account credentials>','Amount':'34.85','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/AuthResult');request.onload = function(){/*function to fetch the response*/}request.send({'AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCD':'1','AcquirerCVVResultCode':'M','AccountName':'<Replace with your API Account credentials>','Amount':'34.85','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class AuthResultRequest{static async Task Main(string[] args){var data = new StringContent('{'AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCD':'1','AcquirerCVVResultCode':'M','AccountName':'<Replace with your API Account credentials>','Amount':'34.85','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCD':'1','AcquirerCVVResultCode':'M','AccountName':'<Replace with your API Account credentials>','Amount':'34.85','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/AuthResult ",
          "PHP": "function AuthResultRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/ChargeAccountToTemporaryToken": {
      "post": {
        "tags": ["Optional"],
        "summary": "ChargeAccountToTemporaryToken",
        "description": "Use this API to exchange a credit/debit card number for a <a href = '/tokenization' target = '_blank'>temporary token</a> that expires after 7 days.",
        "operationId": "ChargeAccountToTemporaryToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargeAccountToTemporaryToken_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargeAccountToTemporaryToken_Response"
            }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class ChargeAccountToTemporaryTokenRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/ChargeAccountToTemporaryToken')).POST('AccountName':'<Replace with your API Account credentials>','ChargeAccountNumber':'340001234527890').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/ChargeAccountToTemporaryToken');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','ChargeAccountNumber':'340001234527890'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class ChargeAccountToTemporaryTokenRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','ChargeAccountNumber':'340001234527890'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','ChargeAccountNumber':'340001234527890'}' http://api.trustvesta.com/ChargeAccountToTemporaryToken ",
          "PHP": "function ChargeAccountToTemporaryTokenRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/ChargePaymentFraudRequest": {
      "post": {
        "tags": ["Required"],
        "summary": "ChargePaymentFraudRequest",
        "description": "Conditional. <br /> Use the ChargePaymentFraudRequest API if you have already authorized the transaction with your gateway/acquirer and received the authorization results. Otherwise, use the <a href = ''>ChargePaymentRequest API</a>. <br /> ChargePaymentFraudRequest determines the risk associated with the transaction and checks if it can be guaranteed before deciding to settle or cancel the transaction. <br /> <b>Note:</b> This API acts as a combination of the ChargePaymentRequest and AuthResult APIs. Authorization results from your gateway/acquirer must be provided to use this API.",
        "operationId": "ChargePaymentFraudRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargePaymentFraudRequest_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargePaymentFraudRequest_Response"
            }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class ChargePaymentFraudRequestRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/ChargePaymentFraudRequest')).POST('AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCVVResultCode':'M','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerCD':'1','Amount':'34.85','AutoDisposition':'0','CVV':'825','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentFraudRequest','PaymentSource':'WEB','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/ChargePaymentFraudRequest');request.onload = function(){/*function to fetch the response*/}request.send({'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCVVResultCode':'M','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerCD':'1','Amount':'34.85','AutoDisposition':'0','CVV':'825','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentFraudRequest','PaymentSource':'WEB','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class ChargePaymentFraudRequestRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCVVResultCode':'M','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerCD':'1','Amount':'34.85','AutoDisposition':'0','CVV':'825','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentFraudRequest','PaymentSource':'WEB','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AcquirerAVSResultCode':'I1','AcquirerAuthResultCode':'100','AcquirerCVVResultCode':'M','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerCD':'1','Amount':'34.85','AutoDisposition':'0','CVV':'825','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentFraudRequest','PaymentSource':'WEB','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}' http://api.trustvesta.com/ChargePaymentFraudRequest ",
          "PHP": "function ChargePaymentFraudRequestRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/ChargePaymentRequest": {
      "post": {
        "tags": ["Required"],
        "summary": "ChargePaymentRequest",
        "description": "Conditional. <br /> ChargePaymentRequest checks the potential risk associated with a transaction and if you can guarantee it before authorizing the transaction with your gateway/acquirer. If you have already authorized the transaction, use the <a href = ''>ChargePaymentFraudRequest</a> API instead.",
        "operationId": "ChargePaymentRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ChargePaymentRequest_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ChargePaymentRequest_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class ChargePaymentRequestRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/ChargePaymentRequest')).POST('AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','CVV':'105','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','NumberOfPayments':'2','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentRequest','PaymentSource':'WEB','PlanType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/ChargePaymentRequest');request.onload = function(){/*function to fetch the response*/}request.send({'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','CVV':'105','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','NumberOfPayments':'2','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentRequest','PaymentSource':'WEB','PlanType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class ChargePaymentRequestRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','CVV':'105','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','NumberOfPayments':'2','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentRequest','PaymentSource':'WEB','PlanType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','AccountHolderAddressLine2':'Suite 628','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','CVV':'105','CreatedByUser':'John-Doe','ExpirationMMYY':'1230','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','NumberOfPayments':'2','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'ChargePaymentRequest','PaymentSource':'WEB','PlanType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','StoreCard':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}' http://api.trustvesta.com/ChargePaymentRequest ",
          "PHP": "function ChargePaymentRequestRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/CheckPaymentFraudRequest": {
      "post": {
        "tags": ["Required"],
        "summary": "CheckPaymentFraudRequest",
        "description": "Conditional. <br /> Use the CheckPaymentFraudRequest API if you have already authorized the transaction with your gateway/acquirer and received the authorization results. Otherwise, use the <a href = ''>CheckPaymentRequest</a> API. <br /> CheckPaymentFraudRequest determines the risk associated with the transaction and checks if it can be guaranteed before deciding to settle or cancel the transaction. <br /> <b>Note</b>: This API acts as a combination of the CheckPaymentRequest and AuthResult APIs. Authorization results from your gateway/acquirer must be provided to use this API.",
        "operationId": "CheckPaymentFraudRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPaymentFraudRequest_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckPaymentFraudRequest_Response"
            }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class CheckPaymentFraudRequestRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/CheckPaymentFraudRequest')).POST('AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerAuthResultCode':'100','Amount':'34.85','AppealEligible':'0','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckType':'P','CreatedByUser':'John-Doe','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentFraudRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/CheckPaymentFraudRequest');request.onload = function(){/*function to fetch the response*/}request.send({'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerAuthResultCode':'100','Amount':'34.85','AppealEligible':'0','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckType':'P','CreatedByUser':'John-Doe','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentFraudRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class CheckPaymentFraudRequestRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerAuthResultCode':'100','Amount':'34.85','AppealEligible':'0','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckType':'P','CreatedByUser':'John-Doe','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentFraudRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','AcquirerAuthResultCode':'100','Amount':'34.85','AppealEligible':'0','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckType':'P','CreatedByUser':'John-Doe','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentFraudRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}' http://api.trustvesta.com/CheckPaymentFraudRequest ",
          "PHP": "function CheckPaymentFraudRequestRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/CheckPaymentRequest": {
      "post": {
        "tags": ["Required"],
        "summary": "CheckPaymentRequest",
        "description": "CheckPaymentRequest sends the transaction information and obtains the risk information before our platform makes the authorization call for you.<ul><li><code>If AutoDisposition=0</code>, our platform must receive your decision to settle or cancel the transaction using the <a href = ''>Disposition</a> API or the transaction will not complete.</li> <li><code>If AutoDisposition=1</code>, our platform automatically completes the transaction and makes the decision to settle or cancel the transaction based on the risk score.</li></ul>",
        "operationId": "CheckPaymentRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckPaymentRequest_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/CheckPaymentRequest_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class CheckPaymentRequestRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/CheckPaymentRequest')).POST('AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckCompanyName':'','CheckType':'P','CreatedByUser':'John-Doe','CustomerID':'','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/CheckPaymentRequest');request.onload = function(){/*function to fetch the response*/}request.send({'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckCompanyName':'','CheckType':'P','CreatedByUser':'John-Doe','CustomerID':'','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class CheckPaymentRequestRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckCompanyName':'','CheckType':'P','CreatedByUser':'John-Doe','CustomerID':'','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountHolderAddressLine1':'9666 Ignacio Prairie','AccountHolderAddressLine2':'Suite 628','AccountHolderCity':'Gerardobury','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'10-14-1993','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'(252) 884-7441 2772','AccountHolderPostalCode':'55742','AccountHolderRegion':'Vermont','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','Amount':'34.85','AutoDisposition':'0','BankRoutingNumber':'130505201','CheckCompanyName':'','CheckType':'P','CreatedByUser':'John-Doe','CustomerID':'','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ','Password':'<Replace with your API Account credentials>','PaymentDescriptor':'CheckPaymentRequest','PaymentSource':'WEB','PaymentType':'1','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'0','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ','WebSessionID':'P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I'}' http://api.trustvesta.com/CheckPaymentRequest ",
          "PHP": "function CheckPaymentRequestRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/Disposition": {
      "post": {
        "tags": ["Required"],
        "summary": "Disposition",
        "description": "Disposition informs our platform if you settled or canceled the transaction based on its risk score. <p>If you set <code>AutoDisposition=0</code> in the <a href=''>ChargePaymentFraudRequest</a> or <a href=''>ChargePaymentRequest</a> API, you must send the Disposition API.</p> <p>If <code>AutoDisposition=1</code> do not use this API.</p>",
        "operationId": "Disposition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Disposition_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/Disposition_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class DispositionRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/Disposition')).POST('AccountName':'<Replace with your API Account credentials>','Amount':'20.00','DispositionComment':'Include a comment here','DispositionType':'1','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/Disposition');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','Amount':'20.00','DispositionComment':'Include a comment here','DispositionType':'1','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class DispositionRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','Amount':'20.00','DispositionComment':'Include a comment here','DispositionType':'1','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','Amount':'20.00','DispositionComment':'Include a comment here','DispositionType':'1','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/Disposition ",
          "PHP": "function DispositionRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/GetPaymentDetail": {
      "post": {
        "tags": ["Optional"],
        "summary": "GetPaymentDetail",
        "description": "GetPaymentDetail verifies the transaction has been completed. <p><b>Note:</b> This API allows you to check the outcome of a manually pending transaction.</p>",
        "operationId": "GetPaymentDetail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetPaymentDetail_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/GetPaymentDetail_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class GetPaymentDetailRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/GetPaymentDetail')).POST('AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/GetPaymentDetail');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class GetPaymentDetailRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/GetPaymentDetail ",
          "PHP": "function GetPaymentDetailRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/GetSessionTags": {
      "post": {
        "tags": ["Required"],
        "summary": "GetSessionTags",
        "description": "GetSessionTags returns the WebSessionID and OrgID needed for client-side forensics and fraud detection. This is accomplished through a JavaScript library that runs in the customers' Web browser.",
        "operationId": "GetSessionTags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GetSessionTags_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/GetSessionTags_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class GetSessionTagsRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/GetSessionTags')).POST('AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/GetSessionTags');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class GetSessionTagsRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','Password':'<Replace with your API Account credentials>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/GetSessionTags ",
          "PHP": "function GetSessionTagsRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/GuaranteePayment": {
      "post": {
        "tags": ["Optional"],
        "summary": "GuaranteePayment",
        "description": "If you are using the selective guarantee feature, GuaranteePayment instructs our platform to guarantee the transaction. Alternatively, you may use the Guarantee Selector feature of the Portal to guarantee the transaction.",
        "operationId": "GuaranteePayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/GuaranteePayment_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/GuaranteePayment_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class GuaranteePaymentRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/GuaranteePayment')).POST('AccountName':'<Replace with your API Account credentials>','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/GuaranteePayment');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class GuaranteePaymentRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','GuaranteeCD':'1','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/GuaranteePayment ",
          "PHP": "function GuaranteePaymentRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/ReversePaymentRequest": {
      "post": {
        "tags": ["Optional"],
        "summary": "ReversePaymentRequest",
        "description": "ReversePaymentRequest informs our platform that you refunded or voided a completed transaction. <p>ReversePaymentRequest refunds or voids a completed transaction</p> <p><b>Note:</b> A <a href=''>ChargePaymentFraudRequest</a> or <a href=''>ChargePaymentRequest</a> must have occurred before you can use this API.</p>.",
        "operationId": "ReversePaymentRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ReversePaymentRequest_Request" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/ReversePaymentRequest_Response" }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class ReversePaymentRequestRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/ReversePaymentRequest')).POST('AccountName':'<Replace with your API Account credentials>','Amount':'100.00','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/ReversePaymentRequest');request.onload = function(){/*function to fetch the response*/}request.send({'AccountName':'<Replace with your API Account credentials>','Amount':'100.00','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class ReversePaymentRequestRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountName':'<Replace with your API Account credentials>','Amount':'100.00','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountName':'<Replace with your API Account credentials>','Amount':'100.00','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentID':'3XNQCKULS','ReportingInformation':'<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/ReversePaymentRequest ",
          "PHP": "function ReversePaymentRequestRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    },
    "/ValidateCheckAccountNumber": {
      "post": {
        "tags": ["Optional"],
        "summary": "ValidateCheckAccountNumber",
        "description": "ValidateCheckAccountNumber sends a micro authorization transaction to check if the eCheck is valid. If the eCheck is valid, you may return a <a href = '/tokenization' target = '_blank'>permanent token</a> to keep on file for repeated use by setting <code>StoreCheckAccount=1</code>.",
        "operationId": "ValidateCheckAccountNumber",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCheckAccountNumber_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ValidateCheckAccountNumber_Response"
            }
          },
          "400": { "description": "Invalid input" }
        },
        "x-code-samples": {
          "Java": "import java.io.IOException;import com.fasterxml.jackson.databind.ObjectMapper;import java.net.URI;import java.net.http.HttpClient;import java.net.http.HttpRequest;import java.net.http.HttpResponse;public class ValidateCheckAccountNumberRequest {public static HttpResponse sendRequest() throws IOException, InterruptedException {HttpClient client = HttpClient.newHttpClient();HttpRequest request = HttpRequest.newBuilder().uri(URI.create('http://api.trustvesta.com/ValidateCheckAccountNumber')).POST('AccountHolderAddressLine1':'1643 Main Ave','AccountHolderAddressLine2':'Suite 014','AccountHolderCity':'Port Kyleighburg','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'1992-03-11','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'5548398623','AccountHolderPostalCode':'83267','AccountHolderRegion':'WV','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','BankRoutingNumber':'323274458','CheckCompanyName':'Smoke Factory','CheckType':'S','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentSource':'PPD','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'1','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ').build();return client.send(request,HttpResponse.BodyHandlers.ofString());}}",
          "JavaScript": "var request = new XMLHttpRequest();request.open('POST','http://api.trustvesta.com/ValidateCheckAccountNumber');request.onload = function(){/*function to fetch the response*/}request.send({'AccountHolderAddressLine1':'1643 Main Ave','AccountHolderAddressLine2':'Suite 014','AccountHolderCity':'Port Kyleighburg','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'1992-03-11','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'5548398623','AccountHolderPostalCode':'83267','AccountHolderRegion':'WV','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','BankRoutingNumber':'323274458','CheckCompanyName':'Smoke Factory','CheckType':'S','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentSource':'PPD','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'1','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'});",
          "C#": "using System;using System.Text;using System.Net.Http;using System.Threading.Tasks;using Newtonsoft.Json;namespace HttpClientPost{ class ValidateCheckAccountNumberRequest{static async Task Main(string[] args){var data = new StringContent('{'AccountHolderAddressLine1':'1643 Main Ave','AccountHolderAddressLine2':'Suite 014','AccountHolderCity':'Port Kyleighburg','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'1992-03-11','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'5548398623','AccountHolderPostalCode':'83267','AccountHolderRegion':'WV','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','BankRoutingNumber':'323274458','CheckCompanyName':'Smoke Factory','CheckType':'S','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentSource':'PPD','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'1','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}', Encoding.UTF8, 'application/json');var url = 'https://httpbin.org/post';using var client = new HttpClient();var response = await client.PostAsync(url, data);string result = response.Content.ReadAsStringAsync().Result;}}}",
          "CURL": " curl --header 'Content-Type: application/json' -d '{'AccountHolderAddressLine1':'1643 Main Ave','AccountHolderAddressLine2':'Suite 014','AccountHolderCity':'Port Kyleighburg','AccountHolderCountryCode':'US','AccountHolderDateOfBirth':'1992-03-11','AccountHolderFirstName':'John','AccountHolderLastName':'Doe','AccountHolderPhoneNumber':'5548398623','AccountHolderPostalCode':'83267','AccountHolderRegion':'WV','AccountName':'<Replace with your API Account credentials>','AccountNumber':'340001234527890','AccountNumberIndicator':'1','BankRoutingNumber':'323274458','CheckCompanyName':'Smoke Factory','CheckType':'S','MerchantRoutingID':'<Replace with your identification number associated with the merchant account.>','PartnerCustomerKey':'F995ECC8-B63A-4447-9D44-C65D868147','Password':'<Replace with your API Account credentials>','PaymentSource':'PPD','RiskInformation':'<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>','StoreCheckAccount':'1','TransactionID':'SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ'}' http://api.trustvesta.com/ValidateCheckAccountNumber ",
          "PHP": "function ValidateCheckAccountNumberRequest($url, $data = false){$curl = curl_init();curl_setopt($curl, CURLOPT_POST, 1);if ($data)curl_setopt($curl, CURLOPT_POSTFIELDS, $data);$result = curl_exec($curl);curl_close($curl);return $result;}"
        }
      }
    }
  },
  "definitions": {
    "AccountNumberToPermanentToken_Request": {
      "type": "object",
      "title": "AccountNumberToPermanentToken_Request",
      "required": [
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "Password"
      ],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "number",
          "example": "340001234527890",
          "description": "Primary account number (PAN) of the card number to be authorized.",
          "maxLength": 19
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Identifies the type of device being passed to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Credit/Debit Account number</td></tr><tr><td>2</td><td>eCheck Account Number</td></tr></tbody></table>",
          "maxLength": 1
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        }
      },
      "description": "AccountNumberToPermanentToken_Request"
    },
    "AccountNumberToPermanentToken_Response": {
      "type": "object",
      "title": "AccountNumberToPermanentToken_Response",
      "required": [
        "CardFirst6",
        "CardLast4",
        "CardTypeCD",
        "PermanentToken",
        "ResponseCode",
        "ResponseText"
      ],
      "properties": {
        "CardFirst6": {
          "type": "number",
          "example": "340001",
          "description": "Returns the first six digits of the credit/debit card number processed."
        },
        "CardLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the credit/debit card number processed."
        },
        "CardTypeCD": {
          "type": "integer",
          "format": "int32",
          "example": "3",
          "description": "Returns the issuer type for the credit/debit card number processed.<table><thead><tr><th>CardTypeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>AAFEES</td></tr><tr><td>25</td><td>Dankort</td></tr><tr><td>27</td><td>Electron</td></tr><tr><td>3</td><td>American Express</td></tr><tr><td>34</td><td>Lasercard</td></tr><tr><td>35</td><td>Maestro</td></tr><tr><td>4</td><td>Visa</td></tr><tr><td>5</td><td>MasterCard</td></tr><tr><td>6</td><td>Discover</td></tr><tr><td>7</td><td>Diners Club</td></tr><tr><td>9</td><td>Carte Blanche</td></tr><tr><td>98</td><td>Unknown</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns the <a href = '/tokenization' target = '_blank'>token</a> for the given credit/debit card number. The token matches the length of the initial card number passed."
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AccountNumberToPermanentToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1002</td><td>Invalid credit card length</td></tr><tr><td>1003</td><td>Credit card failed Mod-10 check</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1006</td><td>Account not setup for this API call</td></tr><tr><td>1007</td><td>Partner is not set up for permanent tokens</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid value</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>."
        }
      },
      "description": "AccountNumberToPermanentToken_Response"
    },
    "AuthResult_Request": {
      "type": "object",
      "title": "AuthResult_Request",
      "required": [
        "AcquirerAVSResultCode",
        "AcquirerAuthResultCode",
        "AcquirerCVVResultCode",
        "AccountName",
        "Amount",
        "Password",
        "PaymentID",
        "TransactionID"
      ],
      "properties": {
        "AcquirerAVSResultCode": {
          "type": "string",
          "example": "I1",
          "description": "The result of your acquirer's address verification system (AVS) check. Required unless explicitly exempted by our platform."
        },
        "AcquirerAuthResultCode": {
          "type": "string",
          "example": "100",
          "description": "The result from the authorization transaction."
        },
        "AcquirerCD": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The acquirer used to authorize a transaction."
        },
        "AcquirerCVVResultCode": {
          "type": "string",
          "example": "M",
          "description": "The result of your acquirer's card verification value (CVV) check. Required unless explicitly exempted by our platform."
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "Amount": {
          "type": "string",
          "example": "34.85",
          "description": "The amount of money sent for authorization.",
          "maxLength": 12
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The identification number generated to track the transaction.",
          "maxLength": 12
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "AuthResult_Request"
    },
    "AuthResult_Response": {
      "type": "object",
      "title": "AuthResult_Response",
      "required": [
        "IsPaymentGuaranteeable",
        "PaymentID",
        "PaymentStatus",
        "ResponseCode",
        "ResponseText",
        "RiskProbabilityIndex",
        "RiskScore"
      ],
      "properties": {
        "IsPaymentGuaranteeable": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether our platform can guarantee the transaction.<table><thead><tr><th>IsPaymentGuaranteeable</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Payment can not be guaranteed</td></tr><tr><td>1</td><td>Payment can be guaranteed</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the authorization transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank Denied</td></tr><tr><td>2</td><td>Pended</td></tr><tr><td>52</td><td>Post-Authorization completed</td></tr><tr><td>62</td><td>Post-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr></tbody></table>"
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AuthResult API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1036</td><td>Payment not eligible for authorization results processing</td></tr><tr><td>1062</td><td>Payment not found</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        },
        "RiskProbabilityIndex": {
          "type": "integer",
          "format": "int32",
          "example": "5",
          "description": "Returns the level of risk associated with accepting the requested transaction.<table><thead><tr><th>RiskProbabilityIndex</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>High Risk</td></tr><tr><td>2</td><td>Mild Risk</td></tr><tr><td>3</td><td>Average</td></tr><tr><td>4</td><td>Safe</td></tr><tr><td>5</td><td>Very Safe</td></tr></tbody></table>"
        },
        "RiskScore": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns the risk score associated with the transaction. Valid values are 0-100; the higher the score, the greater the fraud risk associated with the transaction. This score is only presented if the Fraud Score feature is enabled."
        }
      },
      "description": "AuthResult_Response"
    },
    "ChargeAccountToTemporaryToken_Request": {
      "type": "object",
      "title": "ChargeAccountToTemporaryToken_Request",
      "required": ["AccountName", "ChargeAccountNumber"],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "ChargeAccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The credit/debit card number to exchange for a <a href = '/tokenization' target = '_blank'>token</a>.",
          "maxLength": 19
        }
      },
      "description": "ChargeAccountToTemporaryToken_Request"
    },
    "ChargeAccountToTemporaryToken_Response": {
      "type": "object",
      "title": "ChargeAccountToTemporaryToken_Response",
      "required": [
        "ChargeAccountNumberToken",
        "PaymentDeviceLast4",
        "PaymentDeviceTypeCD",
        "ResponseCode",
        "ResponseText"
      ],
      "properties": {
        "ChargeAccountNumberToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns the <a href = '/tokenization' target = '_blank'>token</a> for the given credit/debit card number. The token matches the length of the initial card number passed."
        },
        "PaymentDeviceLast4": {
          "type": "string",
          "example": "7890",
          "description": "Returns the last four digits of the credit/debit card number processed."
        },
        "PaymentDeviceTypeCD": {
          "type": "integer",
          "format": "int32",
          "example": "3",
          "description": "Returns the issuer type for the credit/debit card number used in the transaction<table><thead><tr><th>PaymentDeviceTypeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>AAFEES</td></tr><tr><td>25</td><td>Dankort</td></tr><tr><td>27</td><td>Electron</td></tr><tr><td>3</td><td>American Express</td></tr><tr><td>34</td><td>Lasercard</td></tr><tr><td>35</td><td>Maestro</td></tr><tr><td>4</td><td>Visa</td></tr><tr><td>5</td><td>MasterCard</td></tr><tr><td>6</td><td>Discover</td></tr><tr><td>7</td><td>Diners Club</td></tr><tr><td>9</td><td>Carte Blanche</td></tr><tr><td>98</td><td>Unknown</td></tr></tbody></table>"
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the ChargeAccountToTemporaryToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1002</td><td>Invalid credit card length</td></tr><tr><td>1003</td><td>Credit card failed Mod-10 check</td></tr><tr><td>1004</td><td>Partner (PartnerCD) is not setup</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>."
        }
      },
      "description": "ChargeAccountToTemporaryToken_Response"
    },
    "ChargePaymentFraudRequest_Request": {
      "type": "object",
      "title": "ChargePaymentFraudRequest_Request",
      "required": [
        "AccountHolderAddressLine1",
        "AccountHolderCity",
        "AccountHolderCountryCode",
        "AccountHolderFirstName",
        "AccountHolderLastName",
        "AccountHolderPostalCode",
        "AccountHolderRegion",
        "AcquirerAVSResultCode",
        "AcquirerAuthResultCode",
        "AcquirerCVVResultCode",
        "RiskInformation",
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "AcquirerCD",
        "Amount",
        "MerchantRoutingID",
        "Password",
        "PaymentSource",
        "TransactionID"
      ],
      "properties": {
        "AccountHolderAddressLine1": {
          "type": "string",
          "example": "9666 Ignacio Prairie",
          "description": "The cardholder's address, line 1. Required when <code>AccountNumberIndicator=4</code> and to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCity": {
          "type": "string",
          "example": "Gerardobury",
          "description": "The cardholder's city. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCountryCode": {
          "type": "string",
          "example": "US",
          "description": "The cardholder's two-character country code. Use the ISO-3166 official country codes. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 2
        },
        "AccountHolderFirstName": {
          "type": "string",
          "example": "John",
          "description": "The cardholder's first name. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderLastName": {
          "type": "string",
          "example": "Doe",
          "description": "The cardholder's last name. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPostalCode": {
          "type": "string",
          "example": "55742",
          "description": "The cardholder's ZIP or postal code. Required when <code>AccountNumberIndicator=4</code> and to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderRegion": {
          "type": "string",
          "example": "Vermont",
          "description": "The cardholder's region name. For U.S. addresses, use the two-character state code. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "AcquirerAVSResultCode": {
          "type": "string",
          "example": "I1",
          "description": "The result of your acquirer's address verification system (AVS) check."
        },
        "AcquirerAuthResultCode": {
          "type": "string",
          "example": "100",
          "description": "The result from the authorization transaction."
        },
        "AcquirerCVVResultCode": {
          "type": "string",
          "example": "M",
          "description": "The result of your acquirer's card verification value (CVV) check."
        },
        "RiskInformation": {
          "type": "string",
          "example": "<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>",
          "description": "The XML string containing risk-related data. See the <a href = '/risk-information' target = '_blank'>Risk Information XML</a> and contact your Integration Specialist for details."
        },
        "AccountHolderAddressLine2": {
          "type": "string",
          "example": "Suite 628",
          "description": "The cardholder's address, line 2.",
          "maxLength": 30
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The credit/debit card number, <a href = '/tokenization' target = '_blank'>token</a> or the BIN plus Last4 of the credit/debit card number/ApplePay Encrypted Payment Token to be authorized. If <code>AccountNumberIndicator=4</code>, then the value entered must be either 10 digits or 4 digits: BIN = First 6 digits of the credit/debit card number and Last4 = Last 4 digits of the credit/debit card number."
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The type of account number being sent to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Credit Card Number.</td></tr><tr><td>2</td><td>Temporary Token.</td></tr><tr><td>3</td><td>Permanent Token.</td></tr><tr><td>4</td><td>BIN + Last4.</td></tr><tr><td>5</td><td>ApplePay Encrypted Payment Token.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "AcquirerCD": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The acquirer used to authorize a transaction."
        },
        "Amount": {
          "type": "string",
          "example": "34.85",
          "description": "The amount of money sent for authorization.",
          "maxLength": 12
        },
        "AutoDisposition": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the transaction uses one step (post-authorization) or two step (pre-authorization and post-authorization) request processing.<table><thead><tr><th>AutoDisposition</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Two step ChargePaymentFraudRequest, Disposition</td></tr><tr><td>1</td><td>One step ChargePaymentFraudRequest, Disposition</td></tr></tbody></table>"
        },
        "CVV": {
          "type": "number",
          "example": "825",
          "description": "The credit/debit card security code (e.g., CVV2 for MC and Visa or CID for American Express). If <code>PaymentSource=PPD</code>, this field is not required.",
          "minLength": 3,
          "maxLength": 4
        },
        "CreatedByUser": {
          "type": "string",
          "example": "John-Doe",
          "description": "The fraud or Revenue Assurance (RA) gateway user account name.",
          "maxLength": 128
        },
        "ExpirationMMYY": {
          "type": "number",
          "example": "1230",
          "description": "The credit/debit card expiration date. Required when <code>AccountNumberIndicator=4</code>. The format is MMYY.",
          "minLength": 4,
          "maxLength": 4
        },
        "MerchantRoutingID": {
          "type": "string",
          "example": "<Replace with your identification number associated with the merchant account.>",
          "description": "The identification number associated with the merchant account.",
          "maxLength": 20
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "The unique data element created to identify a customer, such as a billing account number.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentDescriptor": {
          "type": "string",
          "example": "ChargePaymentFraudRequest",
          "description": "Text description of the payment for tracking purposes. Used to identify the transaction when contacting vSafe support.",
          "maxLength": 128
        },
        "PaymentSource": {
          "type": "string",
          "example": "WEB",
          "description": "The source of the transaction.<table><thead><tr><th>PaymentSource</th><th>Description</th></tr> </thead><tbody><tr><td>PPD</td><td>Use this to specify that the payment has been prearranged. This is used when the payment device has been validated or already had a successful charge against it. When this option is used, the CVV is not required.</td></tr><tr><td>TEL</td><td>Use this to specify that the payment has been taken over the telephone through a call center or interactive voice response (IVR) system.</td></tr><tr><td>WEB</td><td>Use this to specify that the payment has been taken over the Web, mobile Web, native mobile application, or hybrid-mobile application.</td></tr></tbody></table>",
          "maxLength": 3
        },
        "ReportingInformation": {
          "type": "string",
          "example": "<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>",
          "description": "The attribute-based XML blob that contains information the merchant wishes to report on for the specific transaction. The information does not affect processing. It is passed through to use in reporting and PRT search functionality.",
          "maxLength": 3000
        },
        "StoreCard": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the credit/debit card number needs to be exchanged for a <a href = '/tokenization' target = '_blank'>permanent token</a>.<table><thead><tr><th>StoreCard</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Do not exchange card number for a permanent token</td></tr><tr><td>1</td><td>Exchange card number for a permanent token.</td></tr></tbody></table>"
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        },
        "WebSessionID": {
          "type": "string",
          "example": "P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I",
          "description": "The WebSessionID generated by the <a href = ''>GetSessionTags</a> API for the current transaction. This is used for <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a>.",
          "maxLength": 4000
        }
      },
      "description": "ChargePaymentFraudRequest_Request"
    },
    "ChargePaymentFraudRequest_Response": {
      "type": "object",
      "title": "ChargePaymentFraudRequest_Response",
      "required": [
        "CardFirst6",
        "CardLast4",
        "CardTypeCD",
        "IsPaymentGuaranteeable",
        "PaymentGuaranteeStatus",
        "PaymentID",
        "PaymentStatus",
        "PermanentToken",
        "ResponseCode",
        "ResponseText",
        "RiskProbabilityIndex",
        "RiskScore"
      ],
      "properties": {
        "CardFirst6": {
          "type": "number",
          "example": "340001",
          "description": "Returns the first six digits of the credit/debit card number processed.",
          "maxLength": 6
        },
        "CardLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the credit/debit card number processed.",
          "maxLength": 4
        },
        "CardTypeCD": {
          "type": "integer",
          "format": "int32",
          "example": "3",
          "description": "Returns the issuer type for the credit/debit card number processed.<table><thead><tr><th>CardTypeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>AAFEES</td></tr><tr><td>25</td><td>Dankort</td></tr><tr><td>27</td><td>Electron</td></tr><tr><td>3</td><td>American Express</td></tr><tr><td>34</td><td>Lasercard</td></tr><tr><td>35</td><td>Maestro</td></tr><tr><td>4</td><td>Visa</td></tr><tr><td>5</td><td>MasterCard</td></tr><tr><td>6</td><td>Discover</td></tr><tr><td>7</td><td>Diners Club</td></tr><tr><td>9</td><td>Carte Blanche</td></tr><tr><td>98</td><td>Unknown</td></tr></tbody></table>"
        },
        "IsPaymentGuaranteeable": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether our platform can guarantee the transaction.<table><thead><tr><th>IsPaymentGuaranteeable</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Payment can not be guaranteed</td></tr><tr><td>1</td><td>Payment can be guaranteed</td></tr></tbody></table>"
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "Returns the unique data element for identifying a customer.",
          "maxLength": 64
        },
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the authorization transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank Denied</td></tr><tr><td>10</td><td>Successful payment.</td></tr><tr><td>2</td><td>Pended</td></tr><tr><td>21</td><td>Bank Denied pending appeal</td></tr><tr><td>52</td><td>Post-Authorization completed</td></tr><tr><td>62</td><td>Post-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns a permanent token for the credit/debit card number when <code>StoreCard=1</code>.",
          "maxLength": 19
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AccountNumberToPermanentToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1002</td><td>Invalid credit card length</td></tr><tr><td>1003</td><td>Credit card failed Mod-10 check</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1030</td><td>Provide account holder name and complete address</td></tr><tr><td>1031</td><td>Provide account holder address</td></tr><tr><td>1032</td><td>Provide account holder name</td></tr><tr><td>1033</td><td>Parameter (Amount) exceeds maximum transaction amount of (MaxTransactionAmount)</td></tr><tr><td>1034</td><td>Parameter (AutoDisposition) value is not valid for the requested transaction</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1036</td><td>Payment not eligible for authorization results processing</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1061</td><td>AccountNumber not found.</td></tr><tr><td>1063</td><td>Account only eligible for signature debit transactions</td></tr><tr><td>1069</td><td>Account not eligible to use provided AccountNumberIndicator value</td></tr><tr><td>1070</td><td>Unable to decrypt ApplePay encrypted payment token data</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        },
        "RiskProbabilityIndex": {
          "type": "integer",
          "format": "int32",
          "example": "5",
          "description": "Returns the level of risk associated with accepting the requested transaction.<table><thead><tr><th>RiskProbabilityIndex</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>High Risk</td></tr><tr><td>2</td><td>Mild Risk</td></tr><tr><td>3</td><td>Average</td></tr><tr><td>4</td><td>Safe</td></tr><tr><td>5</td><td>Very Safe</td></tr></tbody></table>"
        },
        "RiskScore": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns the risk score associated with the transaction. Valid values are 0-100; the higher the score, the greater the fraud risk associated with the transaction. This score is only presented if the Fraud Score feature is enabled."
        },
        "RiskSystemDecision": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargePaymentFraudRequest_Response-RiskSystemDecision_Model"
          }
        }
      },
      "description": "ChargePaymentFraudRequest_Response"
    },
    "ChargePaymentFraudRequest_Response-RiskSystemDecision_Model": {
      "type": "object",
      "title": "RiskSystemDecision",
      "properties": {
        "Description": {
          "type": "string",
          "example": "Buying from safe product category",
          "description": "The risk decision code provided by the fraud engine.",
          "maxLength": 1024
        },
        "RiskSystemDecisionCD": {
          "type": "number",
          "example": "986",
          "description": "The risk decision code provided by the fraud engine.",
          "maxLength": 10
        }
      },
      "description": "ChargePaymentFraudRequest_Response-RiskSystemDecision_Model"
    },
    "ChargePaymentRequest_Request": {
      "type": "object",
      "title": "ChargePaymentRequest_Request",
      "required": [
        "AccountHolderAddressLine1",
        "AccountHolderCity",
        "AccountHolderCountryCode",
        "AccountHolderFirstName",
        "AccountHolderLastName",
        "AccountHolderPostalCode",
        "AccountHolderRegion",
        "RiskInformation",
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "Amount",
        "MerchantRoutingID",
        "Password",
        "PaymentSource",
        "TransactionID"
      ],
      "properties": {
        "AccountHolderAddressLine1": {
          "type": "string",
          "example": "9666 Ignacio Prairie",
          "description": "The cardholder's address, line 1. Required when <code>AccountNumberIndicator=4</code> and to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCity": {
          "type": "string",
          "example": "Gerardobury",
          "description": "The cardholder's city. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCountryCode": {
          "type": "string",
          "example": "US",
          "description": "The cardholder's two-character country code. Use the ISO-3166 official country codes. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 2
        },
        "AccountHolderFirstName": {
          "type": "string",
          "example": "John",
          "description": "The cardholder's first name. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderLastName": {
          "type": "string",
          "example": "Doe",
          "description": "The cardholder's last name. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPostalCode": {
          "type": "string",
          "example": "55742",
          "description": "The cardholder's ZIP or postal code. Required when <code>AccountNumberIndicator=4</code> and to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderRegion": {
          "type": "string",
          "example": "Vermont",
          "description": "The cardholder's region name. For U.S. addresses, use the two-character state code. Required to guarantee a transaction unless explicitly exempted by our platform.",
          "minLength": 1,
          "maxLength": 30
        },
        "RiskInformation": {
          "type": "string",
          "example": "<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>",
          "description": "The XML string containing risk-related data. See the <a href = '/risk-information' target = '_blank'>Risk Information XML</a> and contact your Integration Specialist for details."
        },
        "AccountHolderAddressLine2": {
          "type": "string",
          "example": "Suite 628",
          "description": "The cardholder's address, line 2.",
          "maxLength": 30
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The credit/debit card number, <a href = '/tokenization' target = '_blank'>token</a> or the BIN plus Last4 of the credit/debit card number/ApplePay Encrypted Payment Token to be authorized. If <code>AccountNumberIndicator=4</code>, then the value entered must be either 10 digits or 4 digits: BIN = First 6 digits of the credit/debit card number and Last4 = Last 4 digits of the credit/debit card number."
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The type of account number being sent to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Credit Card Number.</td></tr><tr><td>2</td><td>Temporary Token.</td></tr><tr><td>3</td><td>Permanent Token.</td></tr><tr><td>4</td><td>BIN + Last4.</td></tr><tr><td>5</td><td>ApplePay Encrypted Payment Token.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "Amount": {
          "type": "string",
          "example": "34.85",
          "description": "The amount of money sent for authorization.",
          "maxLength": 12
        },
        "AutoDisposition": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the transaction uses one step (post-authorization) or two step (pre-authorization and post-authorization) request processing.<table><thead><tr><th>AutoDisposition</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Two step ChargePaymentRequest, Disposition</td></tr><tr><td>1</td><td>One step ChargePaymentRequest, Disposition</td></tr></tbody></table>"
        },
        "CVV": {
          "type": "number",
          "example": "105",
          "description": "The credit/debit card security code (e.g., CVV2 for MC and Visa or CID for American Express). If <code>PaymentSource=PPD</code>, this field is not required.",
          "minLength": 3,
          "maxLength": 4
        },
        "CreatedByUser": {
          "type": "string",
          "example": "John-Doe",
          "description": "The fraud or Revenue Assurance (RA) gateway user account name.",
          "maxLength": 128
        },
        "ExpirationMMYY": {
          "type": "number",
          "example": "1230",
          "description": "The credit/debit card expiration date. Required when <code>AccountNumberIndicator=4</code>. The format is MMYY.",
          "minLength": 4,
          "maxLength": 4
        },
        "MerchantRoutingID": {
          "type": "string",
          "example": "<Replace with your identification number associated with the merchant account.>",
          "description": "The identification number associated with the merchant account.",
          "maxLength": 20
        },
        "NumberOfPayments": {
          "type": "integer",
          "format": "int32",
          "example": "2",
          "description": "The number of installments."
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "The unique data element created to identify a customer, such as a billing account number.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentDescriptor": {
          "type": "string",
          "example": "ChargePaymentRequest",
          "description": "Text description of the payment for tracking purposes. Used to identify the transaction when contacting vSafe support.",
          "maxLength": 128
        },
        "PaymentSource": {
          "type": "string",
          "example": "WEB",
          "description": "The source of the transaction.<table><thead><tr><th>PaymentSource</th><th>Description</th></tr> </thead><tbody><tr><td>PPD</td><td>Use this to specify that the payment has been prearranged. This is used when the payment device has been validated or already had a successful charge against it. When this option is used, the CVV is not required.</td></tr><tr><td>TEL</td><td>Use this to specify that the payment has been taken over the telephone through a call center or interactive voice response (IVR) system.</td></tr><tr><td>WEB</td><td>Use this to specify that the payment has been taken over the Web, mobile Web, native mobile application, or hybrid-mobile application.</td></tr></tbody></table>",
          "maxLength": 3
        },
        "PlanType": {
          "type": "string",
          "example": "1",
          "description": "The payment plan used for the transaction.<table><thead><tr><th>PlanType</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Onetime, Non-Installment Payment</td></tr><tr><td>1</td><td>Monthly Installment Principal Only</td></tr><tr><td>2</td><td>Monthly Installment Principal and Interest</td></tr><tr><td>3</td><td>Monthly Installment Interest Only</td></tr></tbody></table>"
        },
        "ReportingInformation": {
          "type": "string",
          "example": "<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>",
          "description": "The attribute-based XML blob that contains information the merchant wishes to report on for the specific transaction. The information does not affect processing. It is passed through to use in reporting and PRT search functionality.",
          "maxLength": 3000
        },
        "StoreCard": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the credit/debit card number needs to be exchanged for a <a href = '/tokenization' target = '_blank'>permanent token</a>.<table><thead><tr><th>StoreCard</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Do not exchange card number for a permanent token</td></tr><tr><td>1</td><td>Exchange card number for a permanent token.</td></tr></tbody></table>"
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        },
        "WebSessionID": {
          "type": "string",
          "example": "P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I",
          "description": "The WebSessionID generated by the <a href = ''>GetSessionTags</a> API for the current transaction. This is used for <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a>.",
          "maxLength": 4000
        }
      },
      "description": "ChargePaymentRequest_Request"
    },
    "ChargePaymentRequest_Response": {
      "type": "object",
      "title": "ChargePaymentRequest_Response",
      "required": [
        "AuthorizedAmount",
        "CardFirst6",
        "CardLast4",
        "CardTypeCD",
        "IsPaymentGuaranteeable",
        "PaymentGuaranteeStatus",
        "PaymentID",
        "PaymentStatus",
        "PermanentToken",
        "ResponseCode",
        "ResponseText",
        "RiskDecisionCode",
        "RiskDecisionCodeText",
        "RiskProbabilityIndex",
        "RiskScore"
      ],
      "properties": {
        "AuthorizedAmount": {
          "type": "string",
          "example": "30",
          "description": "Returns the amount of money authorized by your gateway/acquirer. This amount may be less than the original requested amount.",
          "maxLength": 12
        },
        "CardFirst6": {
          "type": "number",
          "example": "340001",
          "description": "Returns the first six digits of the credit/debit card number processed.",
          "maxLength": 6
        },
        "CardLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the credit/debit card number processed",
          "maxLength": 4
        },
        "CardTypeCD": {
          "type": "integer",
          "format": "int32",
          "example": "3",
          "description": "Returns the issuer type for the credit/debit card number processed<table><thead><tr><th>CardTypeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>AAFEES</td></tr><tr><td>25</td><td>Dankort</td></tr><tr><td>27</td><td>Electron</td></tr><tr><td>3</td><td>American Express</td></tr><tr><td>34</td><td>Lasercard</td></tr><tr><td>35</td><td>Maestro</td></tr><tr><td>4</td><td>Visa</td></tr><tr><td>5</td><td>MasterCard</td></tr><tr><td>6</td><td>Discover</td></tr><tr><td>7</td><td>Diners Club</td></tr><tr><td>9</td><td>Carte Blanche</td></tr><tr><td>98</td><td>Unknown</td></tr></tbody></table>"
        },
        "IsPaymentGuaranteeable": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether our platform can guarantee the transaction.<table><thead><tr><th>IsPaymentGuaranteeable</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Payment can not be guaranteed</td></tr><tr><td>1</td><td>Payment can be guaranteed</td></tr></tbody></table>"
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "Returns the unique data element for identifying a customer.",
          "maxLength": 64
        },
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Result of the authorization request.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank Denied</td></tr><tr><td>10</td><td>Successful payment.</td></tr><tr><td>2</td><td>Pended</td></tr><tr><td>3</td><td>vSafe Denied. This can occur if vSafe has determined that this transaction is too risky to process, or the customer is not reliable.</td></tr><tr><td>5</td><td>Authorized</td></tr><tr><td>51</td><td>Pre-Authorization completed</td></tr><tr><td>52</td><td>Post-Authorization completed</td></tr><tr><td>6</td><td>Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr><tr><td>61</td><td>Pre-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr><tr><td>62</td><td>Post-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": " Returns a <a href = '/tokenization' target = '_blank'>permanent token</a> for the credit/debit card number when <code>StoreCard=1</code>.",
          "maxLength": 19
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AccountNumberToPermanentToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1002</td><td>Invalid credit card length</td></tr><tr><td>1003</td><td>Credit card failed Mod-10 check</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1030</td><td>Provide account holder name and complete address</td></tr><tr><td>1031</td><td>Provide account holder address</td></tr><tr><td>1032</td><td>Provide account holder name</td></tr><tr><td>1033</td><td>Parameter (Amount) exceeds maximum transaction amount of (MaxTransactionAmount)</td></tr><tr><td>1034</td><td>Parameter (AutoDisposition) value is not valid for the requested transaction</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1061</td><td>AccountNumber not found.</td></tr><tr><td>1063</td><td>Account only eligible for signature debit transactions</td></tr><tr><td>1069</td><td>Account not eligible to use provided AccountNumberIndicator value</td></tr><tr><td>1070</td><td>Unable to decrypt ApplePay encrypted payment token data</td></tr><tr><td>1102</td><td>Installment payments not configured for merchant. Avoid passing NumberOfPayments for one-time payment.</td></tr><tr><td>1104</td><td>Installment payment attempted with invalid PlanType.</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        },
        "RiskDecisionCode": {
          "type": "integer",
          "format": "int32",
          "example": "1707",
          "description": "Returns the decision code from the decision engine when the transaction is denied or pended.<table><thead><tr><th>RiskDecisionCode</th><th>Description</th></tr> </thead><tbody><tr><td>1701</td><td>Score exceeds risk system thresholds.</td></tr><tr><td>1702</td><td>Insufficient information for risk system to approve.</td></tr><tr><td>1703</td><td>Insufficient checking account history.</td></tr><tr><td>1704</td><td>Suspended account.</td></tr><tr><td>1705</td><td>Payment method type is not accepted.</td></tr><tr><td>1706</td><td>Duplicate transaction.</td></tr><tr><td>1707</td><td>Other payment(s) still in process.</td></tr><tr><td>1708</td><td>SSN and/or address did not pass bureau validation.</td></tr><tr><td>1709</td><td>Exceeds check amount limit.</td></tr><tr><td>1710</td><td>High risk based upon checking account history (EWS).</td></tr><tr><td>1711</td><td>Declined due to ACH regulations.</td></tr><tr><td>1712</td><td>Bounced check(s), NSFs, or account closed.</td></tr><tr><td>1713</td><td>Information provided does not match what is on file at bank.</td></tr><tr><td>1799</td><td>Declined by bank.</td></tr></tbody></table>"
        },
        "RiskDecisionCodeText": {
          "type": "string",
          "example": "Other payment(s) still in process.",
          "description": "Returns the description of the decision code from the decision engine when the transaction is denied or pended."
        },
        "RiskProbabilityIndex": {
          "type": "integer",
          "format": "int32",
          "example": "5",
          "description": "Returns the level of risk associated with accepting the requested transaction.<table><thead><tr><th>RiskProbabilityIndex</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>High Risk</td></tr><tr><td>2</td><td>Mild Risk</td></tr><tr><td>3</td><td>Average</td></tr><tr><td>4</td><td>Safe</td></tr><tr><td>5</td><td>Very Safe</td></tr></tbody></table>"
        },
        "RiskScore": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns the risk score associated with the transaction. Valid values are 0-100; the higher the score, the greater the fraud risk associated with the transaction. This score is only presented if the Fraud Score feature is enabled."
        }
      },
      "description": "ChargePaymentRequest_Response"
    },
    "CheckPaymentFraudRequest_Request": {
      "type": "object",
      "title": "CheckPaymentFraudRequest_Request",
      "required": [
        "AccountHolderFirstName",
        "AccountHolderLastName",
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "Amount",
        "CheckType",
        "MerchantRoutingID",
        "Password",
        "PaymentSource",
        "PaymentType",
        "TransactionID"
      ],
      "properties": {
        "AccountHolderAddressLine1": {
          "type": "string",
          "example": "9666 Ignacio Prairie",
          "description": "The card/check holder's address, line 1. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderAddressLine2": {
          "type": "string",
          "example": "Suite 628",
          "description": "The card/check holder's address, line 2.",
          "maxLength": 30
        },
        "AccountHolderCity": {
          "type": "string",
          "example": "Gerardobury",
          "description": "The card/check holder's city. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCountryCode": {
          "type": "string",
          "example": "US",
          "description": "The card/check holder's two-character country code. Use the ISO-3166 official country codes. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 2
        },
        "AccountHolderDateOfBirth": {
          "type": "string",
          "example": "10-14-1993",
          "description": "The card/check holder's birth date.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderFirstName": {
          "type": "string",
          "example": "John",
          "description": "The card/check holder's first name.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderLastName": {
          "type": "string",
          "example": "Doe",
          "description": "The card/check holder's last name.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPhoneNumber": {
          "type": "string",
          "example": "(252) 884-7441 2772",
          "description": "The card/check holder's phone number on file with the bank.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPostalCode": {
          "type": "string",
          "example": "55742",
          "description": "The card/check holder's ZIP or postal code. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderRegion": {
          "type": "string",
          "example": "Vermont",
          "description": "The card/check holder's region name. For U.S. addresses, use the two-character state code. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The account number or <a href = '/tokenization' target = '_blank'>token</a> of the check to be authorized. If the <code>AccountNumberIndicator=6</code>, then this value should be set with a Plaid processor token.",
          "minLength": 4,
          "maxLength": 60
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The type of account number being sent to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Check Number.</td></tr><tr><td>2</td><td>Temporary Token.</td></tr><tr><td>3</td><td>Permanent Token.</td></tr><tr><td>6</td><td>Plaid processor token</td></tr></tbody></table>",
          "maxLength": 1
        },
        "AcquirerAuthResultCode": {
          "type": "string",
          "example": "100",
          "description": "The result code from the acquirer authorizing the transaction."
        },
        "Amount": {
          "type": "string",
          "example": "34.85",
          "description": "The amount of money sent for authorization.",
          "maxLength": 12
        },
        "AppealEligible": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the transaction is declined by the bank and eligible for a Bank Decline appeal.<table><thead><tr><th>AppealEligible</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Not eligible</td></tr><tr><td>1</td><td>Eligible for Bank Decline Appeal</td></tr></tbody></table>"
        },
        "AutoDisposition": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the transaction uses one step (post-authorization) or two step (pre-authorization and post-authorization) request processing.<table><thead><tr><th>AutoDisposition</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Two step CheckPaymentFraudRequest, Disposition</td></tr><tr><td>1</td><td>One step CheckPaymentFraudRequest, Disposition</td></tr></tbody></table>"
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "130505201",
          "description": "The routing number for the bank on the check. Required when the AccountNumberIndicator is not equal to 6 (Plaid).",
          "minLength": 9,
          "maxLength": 9
        },
        "CheckType": {
          "type": "string",
          "example": "P",
          "description": "The check type used for the transaction.<table><thead><tr><th>CheckType</th><th>Description</th></tr> </thead><tbody><tr><td>C</td><td>Company check.</td></tr><tr><td>P</td><td>Personal checking account.</td></tr><tr><td>S</td><td>Savings account.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "CreatedByUser": {
          "type": "string",
          "example": "John-Doe",
          "description": "The fraud or Revenue Assurance (RA) gateway user account name.",
          "maxLength": 128
        },
        "MerchantRoutingID": {
          "type": "string",
          "example": "<Replace with your identification number associated with the merchant account.>",
          "description": "The identification number associated with the merchant account."
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "The unique data element created to identify a customer, such as a billing account number.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentDescriptor": {
          "type": "string",
          "example": "CheckPaymentFraudRequest",
          "description": "Text description of the payment for tracking purposes. Used to identify the transaction when contacting vSafe support.",
          "maxLength": 128
        },
        "PaymentSource": {
          "type": "string",
          "example": "WEB",
          "description": "The source of the transaction.<table><thead><tr><th>PaymentSource</th><th>Description</th></tr> </thead><tbody><tr><td>PPD</td><td>Use this to specify that the payment has been prearranged. This is used when the payment device has been validated or already had a successful charge against it. When this option is used, the CVV is not required.</td></tr><tr><td>TEL</td><td>Use this to specify that the payment has been taken over the telephone through a call center or interactive voice response (IVR) system.</td></tr><tr><td>WEB</td><td>Use this to specify that the payment has been taken over the Web, mobile Web, native mobile application, or hybrid-mobile application.</td></tr></tbody></table>",
          "maxLength": 3
        },
        "PaymentType": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Indicates if the payment is a one-time or recurring payment.<table><thead><tr><th>PaymentType</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>One-time payment.</td></tr><tr><td>2</td><td>Recurring payment.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "ReportingInformation": {
          "type": "string",
          "example": "<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>",
          "description": "The attribute-based XML blob that contains information the merchant wishes to report on for the specific transaction. The information does not affect processing. It is passed through to use in reporting and PRT search functionality.",
          "maxLength": 3000
        },
        "RiskInformation": {
          "type": "string",
          "example": "<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>",
          "description": "The XML string containing risk-related data. See the <a href = '/risk-information' target = '_blank'>Risk Information XML</a> and contact your Integration Specialist for details. Required if the merchant is indemnified and for Guaranteed transactions. Optional for non-Guaranteed transactions."
        },
        "StoreCheckAccount": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the check number needs to be exchanged for a <a href = '/tokenization' target = '_blank'>permanent token</a>.<table><thead><tr><th>StoreCheckAccount</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Do not exchange card number for a permanent token</td></tr><tr><td>1</td><td>Exchange card number for a permanent token.</td></tr></tbody></table>"
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        },
        "WebSessionID": {
          "type": "string",
          "example": "P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I",
          "description": "The WebSessionID generated by the <a href = ''>GetSessionTags</a> API for the current transaction. This is used for <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a> as part of the <code>PaymentSource=WEB</code> transactions. Required if the merchant is indemnified.",
          "maxLength": 4000
        }
      },
      "description": "CheckPaymentFraudRequest_Request"
    },
    "CheckPaymentFraudRequest_Response": {
      "type": "object",
      "title": "CheckPaymentFraudRequest_Response",
      "required": [
        "AccountLast4",
        "BankRoutingNumber",
        "CheckValidationDecision",
        "IsPaymentGuaranteeable",
        "PaymentGuaranteeStatus",
        "PaymentID",
        "PaymentStatus",
        "PermanentToken",
        "ResponseCode",
        "ResponseText",
        "RiskDecisionCode",
        "RiskDecisionCodeText",
        "RiskProbabilityIndex",
        "RiskScore",
        "RiskSystemDecision"
      ],
      "properties": {
        "AccountLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the check number processed.",
          "maxLength": 4
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "130505201",
          "description": "Returns the new routing number for the payment number when <code>RoutingNumberUpdate=1</code>.",
          "maxLength": 9
        },
        "CheckValidationDecision": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns the result of the check validation outcome.<table><thead><tr><th>CheckValidationDecision</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Accept, use as entered</td></tr><tr><td>2</td><td>Accept, modify routing</td></tr><tr><td>3</td><td>Deny, routing number not found (retired)</td></tr><tr><td>4</td><td>Deny, routing number invalid (fraud)</td></tr><tr><td>5</td><td>Transaction Denied, account number invalid</td></tr><tr><td>6</td><td>Transaction Denied, account number is not accepted by acquirer</td></tr><tr><td>7</td><td>Transaction Denied, account at high risk for possible fraud</td></tr><tr><td>8</td><td>Merchant configuration error. Please contact vSafe support</td></tr></tbody></table>",
          "maxLength": 2
        },
        "IsPaymentGuaranteeable": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether our platform can guarantee the transaction.<table><thead><tr><th>IsPaymentGuaranteeable</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Payment can not be guaranteed</td></tr><tr><td>1</td><td>Payment can be guaranteed</td></tr></tbody></table>"
        },
        "IsShadowPayment": {
          "type": "boolean",
          "example": "0",
          "description": "Returns whether the transaction is a shadow payment (not actually guaranteed).<table><thead><tr><th>IsShadowPayment</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>This is a shadow payment and so not actually guaranteed</td></tr></tbody></table>"
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "Returns the unique data element for identifying a customer.",
          "maxLength": 64
        },
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the authorization transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank Denied</td></tr><tr><td>10</td><td>Successful payment.</td></tr><tr><td>2</td><td>Pended</td></tr><tr><td>3</td><td>vSafe Denied</td></tr><tr><td>5</td><td>Authorized</td></tr><tr><td>51</td><td>Pre-Authorization completed</td></tr><tr><td>52</td><td>Post-Authorization completed</td></tr><tr><td>6</td><td>Authorization communication failure.</td></tr><tr><td>61</td><td>Pre-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr><tr><td>62</td><td>Post-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns a permanent token for the credit/debit card number when <code>StoreCheckAccount=1</code>.",
          "maxLength": 19
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AccountNumberToPermanentToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1006</td><td>Account not setup for this API call</td></tr><tr><td>1007</td><td>Account is not set up for Permanent Tokens</td></tr><tr><td>1009</td><td>Routing number invalid</td></tr><tr><td>1020</td><td>Routing number not found</td></tr><tr><td>1030</td><td>Provide account holder name and complete address</td></tr><tr><td>1031</td><td>Provide account holder address</td></tr><tr><td>1032</td><td>Provide account holder name</td></tr><tr><td>1033</td><td>Parameter (Amount) exceeds maximum transaction amount of (MaxTransactionAmount)</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1039</td><td>Parameter (StoreCheckAccount) is invalid for AccountNumberIndicator</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1061</td><td>AccountNumber not found.</td></tr><tr><td>1071</td><td>Unable to retrieve account details using Plaid Processor Token</td></tr><tr><td>1106</td><td>The support guarantee eCheck payments using Plaid is not configured for merchant</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        },
        "RiskDecisionCode": {
          "type": "integer",
          "format": "int32",
          "example": "1707",
          "description": "Returns the decision code from the decision engine when the transaction is denied or pended.<table><thead><tr><th>RiskDecisionCode</th><th>Description</th></tr> </thead><tbody><tr><td>1701</td><td>Score exceeds risk system thresholds.</td></tr><tr><td>1702</td><td>Insufficient information for risk system to approve.</td></tr><tr><td>1703</td><td>Insufficient checking account history.</td></tr><tr><td>1704</td><td>Suspended account.</td></tr><tr><td>1705</td><td>Payment method type is not accepted.</td></tr><tr><td>1706</td><td>Duplicate transaction.</td></tr><tr><td>1707</td><td>Other payment(s) still in process.</td></tr><tr><td>1708</td><td>SSN and/or address did not pass bureau validation.</td></tr><tr><td>1709</td><td>Exceeds check amount limit.</td></tr><tr><td>1710</td><td>High risk based upon checking account history (EWS).</td></tr><tr><td>1711</td><td>Declined due to ACH regulations.</td></tr><tr><td>1712</td><td>Bounced check(s), NSFs, or account closed.</td></tr><tr><td>1713</td><td>Information provided does not match what is on file at bank.</td></tr><tr><td>1799</td><td>Declined by bank.</td></tr></tbody></table>"
        },
        "RiskDecisionCodeText": {
          "type": "string",
          "example": "Other payment(s) still in process.",
          "description": "Returns the description of the decision code from the decision engine when the transaction is denied or pended."
        },
        "RiskProbabilityIndex": {
          "type": "integer",
          "format": "int32",
          "example": "5",
          "description": "Returns the level of risk associated with accepting the requested transaction.<table><thead><tr><th>RiskProbabilityIndex</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>High Risk</td></tr><tr><td>2</td><td>Mild Risk</td></tr><tr><td>3</td><td>Average</td></tr><tr><td>4</td><td>Safe</td></tr><tr><td>5</td><td>Very Safe</td></tr></tbody></table>"
        },
        "RiskScore": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns the risk score associated with the transaction. Valid values are 0-100; the higher the score, the greater the fraud risk associated with the transaction. This score is only presented if the Fraud Score feature is enabled."
        },
        "RiskSystemDecision": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckPaymentFraudRequest_Response-RiskSystemDecision_Model"
          }
        }
      },
      "description": "CheckPaymentFraudRequest_Response"
    },
    "CheckPaymentFraudRequest_Response-RiskSystemDecision_Model": {
      "type": "object",
      "title": "RiskSystemDecision",
      "properties": {
        "Description": {
          "type": "string",
          "example": "Buying from safe product category",
          "description": " The description of the risk decision code.",
          "maxLength": 1024
        },
        "RiskSystemDecisionCD": {
          "type": "number",
          "example": "986",
          "description": "The risk decision code provided by the fraud engine.",
          "maxLength": 10
        }
      },
      "description": "CheckPaymentFraudRequest_Response-RiskSystemDecision_Model"
    },
    "CheckPaymentRequest_Request": {
      "type": "object",
      "title": "CheckPaymentRequest_Request",
      "required": [
        "AccountHolderFirstName",
        "AccountHolderLastName",
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "Amount",
        "CheckType",
        "MerchantRoutingID",
        "Password",
        "PaymentSource",
        "PaymentType",
        "TransactionID"
      ],
      "properties": {
        "AccountHolderAddressLine1": {
          "type": "string",
          "example": "9666 Ignacio Prairie",
          "description": "The card/check holder's address, line 1. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderAddressLine2": {
          "type": "string",
          "example": "Suite 628",
          "description": "The card/check holder's address, line 2.",
          "maxLength": 30
        },
        "AccountHolderCity": {
          "type": "string",
          "example": "Gerardobury",
          "description": "The card/check holder's city. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCountryCode": {
          "type": "string",
          "example": "US",
          "description": "The card/check holder's two-character country code. Use the ISO-3166 official country codes. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 2
        },
        "AccountHolderDateOfBirth": {
          "type": "string",
          "example": "10-14-1993",
          "description": "The card/check holder's birth date.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderFirstName": {
          "type": "string",
          "example": "John",
          "description": "The card/check holder's first name.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderLastName": {
          "type": "string",
          "example": "Doe",
          "description": "The card/check holder's last name.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPhoneNumber": {
          "type": "string",
          "example": "(252) 884-7441 2772",
          "description": "The card/check holder's phone number on file with the bank.",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPostalCode": {
          "type": "string",
          "example": "55742",
          "description": "The card/check holder's ZIP or postal code. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderRegion": {
          "type": "string",
          "example": "Vermont",
          "description": "The card/check holder's region name. For U.S. addresses, use the two-character state code. Required if the merchant is indemnified.",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The account number or <a href = '/tokenization' target = '_blank'>token</a> of the check to be authorized. If the <code>AccountNumberIndicator=6</code>, then this value should be set with a Plaid processor token.",
          "minLength": 4,
          "maxLength": 60
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The type of account number being sent to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Check Number.</td></tr><tr><td>2</td><td>Temporary Token.</td></tr><tr><td>3</td><td>Permanent Token.</td></tr><tr><td>6</td><td>Plaid processor token</td></tr></tbody></table>",
          "maxLength": 1
        },
        "Amount": {
          "type": "string",
          "example": "34.85",
          "description": "The amount of money sent for authorization.",
          "maxLength": 12
        },
        "AutoDisposition": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the transaction uses one step (post-authorization) or two step (pre-authorization and post-authorization) request processing.<table><thead><tr><th>AutoDisposition</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Two step CheckPaymentRequest, Disposition</td></tr><tr><td>1</td><td>One step CheckPaymentRequest, Disposition</td></tr></tbody></table>"
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "130505201",
          "description": "The routing number for the bank on the check. Required when the AccountNumberIndicator is not equal to 6 (Plaid).",
          "minLength": 9,
          "maxLength": 9
        },
        "CheckCompanyName": {
          "type": "string",
          "example": "CheckCompanyName",
          "description": "The card/check holder's company name, if the account is associated with a company.",
          "maxLength": 40
        },
        "CheckType": {
          "type": "string",
          "example": "P",
          "description": "The check type used for the transaction.<table><thead><tr><th>CheckType</th><th>Description</th></tr> </thead><tbody><tr><td>C</td><td>Company check.</td></tr><tr><td>P</td><td>Personal checking account.</td></tr><tr><td>S</td><td>Savings account.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "CreatedByUser": {
          "type": "string",
          "example": "John-Doe",
          "description": "The fraud or Revenue Assurance (RA) gateway user account name.",
          "maxLength": 128
        },
        "CustomerID": {
          "type": "string",
          "example": "CustomerID",
          "description": "The check holder's government-issued identification number. Required for Colombia.",
          "maxLength": 255
        },
        "MerchantRoutingID": {
          "type": "string",
          "example": "<Replace with your identification number associated with the merchant account.>",
          "description": "The identification number associated with the merchant account."
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "The unique data element created to identify a customer, such as a billing account number.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentDescriptor": {
          "type": "string",
          "example": "CheckPaymentRequest",
          "description": "PaymentDescriptor to display in the Vesta CSR tool.",
          "maxLength": 128
        },
        "PaymentSource": {
          "type": "string",
          "example": "WEB",
          "description": "The source of the transaction.<table><thead><tr><th>PaymentSource</th><th>Description</th></tr> </thead><tbody><tr><td>PPD</td><td>PPD - Payment has been pre-arranged.</td></tr><tr><td>TEL</td><td>TEL - Payment has been taken over the phone.</td></tr><tr><td>WEB</td><td>WEB - Payment has been taken over the internet.</td></tr></tbody></table>",
          "maxLength": 3
        },
        "PaymentType": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Indicates if the payment is a one-time or recurring payment.<table><thead><tr><th>PaymentType</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>One-time payment.</td></tr><tr><td>2</td><td>Recurring payment.</td></tr></tbody></table>",
          "maxLength": 1
        },
        "ReportingInformation": {
          "type": "string",
          "example": "<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>",
          "description": "The attribute-based XML blob that contains information the merchant wishes to report on for the specific transaction. The information does not affect processing. It is passed through to use in reporting and PRT search functionality.",
          "maxLength": 3000
        },
        "RiskInformation": {
          "type": "string",
          "example": "<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>",
          "description": "The XML string containing risk-related data. See the <a href = '/risk-information' target = '_blank'>Risk Information XML</a> and contact your Integration Specialist for details. Required if the merchant is indemnified and for Guaranteed transactions. Optional for non-Guaranteed transactions."
        },
        "StoreCheckAccount": {
          "type": "boolean",
          "example": "0",
          "description": "Indicates if the check number needs to be exchanged for a <a href = '/tokenization' target = '_blank'>permanent token</a>.<table><thead><tr><th>StoreCheckAccount</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Do not exchange payment account number (PAN) for a permanent token</td></tr><tr><td>1</td><td>Exchange payment account number (PAN) for a permanent token.</td></tr></tbody></table>"
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        },
        "WebSessionID": {
          "type": "string",
          "example": "P1TQ-DKZ2-0JNE-AIU4-6S12-J2V0-JXK3-KMA6I",
          "description": "The WebSessionID generated by the <a href = ''>GetSessionTags</a> API for the current transaction. This is used for <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a> as part of the <code>PaymentSource=WEB</code> transactions. Required if the merchant is indemnified.",
          "maxLength": 4000
        }
      },
      "description": "CheckPaymentRequest_Request"
    },
    "CheckPaymentRequest_Response": {
      "type": "object",
      "title": "CheckPaymentRequest_Response",
      "required": [
        "AccountLast4",
        "AuthResultCode",
        "BankRoutingNumber",
        "CheckValidationDecision",
        "IsPaymentGuaranteeable",
        "PaymentAcquirerName",
        "PaymentGuaranteeStatus",
        "PaymentID",
        "PaymentStatus",
        "PermanentToken",
        "ResponseCode",
        "ResponseText",
        "RiskDecisionCode",
        "RiskDecisionCodeText",
        "RiskProbabilityIndex",
        "RiskScore",
        "RoutingNumberUpdate"
      ],
      "properties": {
        "AccountLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the check number processed.",
          "maxLength": 4
        },
        "AuthResultCode": {
          "type": "integer",
          "format": "int32",
          "example": "AuthResultCode",
          "description": "Returns the details about a transaction declined for non-sufficient funds (NSF).<table><thead><tr><th>AuthResultCode</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Non-sufficient funds.</td></tr></tbody></table>"
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "130505201",
          "description": "Returns the new routing number for the payment number when <code>RoutingNumberUpdate=1</code>.",
          "maxLength": 9
        },
        "CheckValidationDecision": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns the result of the check validation outcome.<table><thead><tr><th>CheckValidationDecision</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Accept, use as entered</td></tr><tr><td>2</td><td>Accept, modify routing</td></tr><tr><td>3</td><td>Deny, routing number not found (retired)</td></tr><tr><td>4</td><td>Deny, routing number invalid (fraud)</td></tr><tr><td>5</td><td>Transaction Denied, account number invalid</td></tr><tr><td>6</td><td>Transaction Denied, account number is not accepted by acquirer</td></tr><tr><td>7</td><td>Transaction Denied, account at high risk for possible fraud</td></tr><tr><td>8</td><td>Merchant configuration error. Please contact vSafe support</td></tr></tbody></table>",
          "maxLength": 2
        },
        "IsPaymentGuaranteeable": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether our platform can guarantee the transaction.<table><thead><tr><th>IsPaymentGuaranteeable</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Payment can not be guaranteed</td></tr><tr><td>1</td><td>Payment can be guaranteed</td></tr></tbody></table>"
        },
        "IsShadowPayment": {
          "type": "boolean",
          "example": "0",
          "description": "Returns whether the transaction is a shadow payment (not actually guaranteed).<table><thead><tr><th>IsShadowPayment</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>This is a shadow payment and so not actually guaranteed</td></tr></tbody></table>"
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "0GK2-CIQ5-ZA85-ZB14-2URR-GB1V-SIMJ",
          "description": "Returns the unique data element for identifying a customer.",
          "maxLength": 64
        },
        "PaymentAcquirerName": {
          "type": "string",
          "example": "Chase ACH",
          "description": "Returns the name of the acquirer that processed the transaction.",
          "maxLength": 64
        },
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the authorization transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank Denied</td></tr><tr><td>10</td><td>Successful payment.</td></tr><tr><td>2</td><td>Pended</td></tr><tr><td>3</td><td>vSafe Denied</td></tr><tr><td>5</td><td>Authorized</td></tr><tr><td>51</td><td>Pre-Authorization completed</td></tr><tr><td>52</td><td>Post-Authorization completed</td></tr><tr><td>6</td><td>Authorization communication failure.</td></tr><tr><td>61</td><td>Pre-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr><tr><td>62</td><td>Post-Authorization communication error.The transaction did not complete. Re-run the transaction. If the problem persists, contact vSafe support.</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns a <a href = '/tokenization' target = '_blank'>permanent token</a> for the credit/debit card number when <code>StoreCheckAccount=1</code>.",
          "maxLength": 19
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the AccountNumberToPermanentToken API. <br /> Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. If the response code is non-zero, an error message is included with the response code.<table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1006</td><td>Account not setup for this API call</td></tr><tr><td>1007</td><td>Account is not set up for Permanent Tokens</td></tr><tr><td>1009</td><td>Routing number invalid</td></tr><tr><td>1020</td><td>Routing number not found</td></tr><tr><td>1030</td><td>Provide account holder name and complete address</td></tr><tr><td>1031</td><td>Provide account holder address</td></tr><tr><td>1032</td><td>Provide account holder name</td></tr><tr><td>1033</td><td>Parameter (Amount) exceeds maximum transaction amount of (MaxTransactionAmount)</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1039</td><td>Parameter (StoreCheckAccount) is invalid for AccountNumberIndicator</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1061</td><td>AccountNumber not found.</td></tr><tr><td>1071</td><td>Unable to retrieve account details using Plaid Processor Token</td></tr><tr><td>1106</td><td>The support guarantee eCheck payments using Plaid is not configured for merchant</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        },
        "RiskDecisionCode": {
          "type": "integer",
          "format": "int32",
          "example": "1707",
          "description": "Returns the decision code from the decision engine when the transaction is denied or pended.<table><thead><tr><th>RiskDecisionCode</th><th>Description</th></tr> </thead><tbody><tr><td>1701</td><td>Score exceeds risk system thresholds.</td></tr><tr><td>1702</td><td>Insufficient information for risk system to approve.</td></tr><tr><td>1703</td><td>Insufficient checking account history.</td></tr><tr><td>1704</td><td>Suspended account.</td></tr><tr><td>1705</td><td>Payment method type is not accepted.</td></tr><tr><td>1706</td><td>Duplicate transaction.</td></tr><tr><td>1707</td><td>Other payment(s) still in process.</td></tr><tr><td>1708</td><td>SSN and/or address did not pass bureau validation.</td></tr><tr><td>1709</td><td>Exceeds check amount limit.</td></tr><tr><td>1710</td><td>High risk based upon checking account history (EWS).</td></tr><tr><td>1711</td><td>Declined due to ACH regulations.</td></tr><tr><td>1712</td><td>Bounced check(s), NSFs, or account closed.</td></tr><tr><td>1713</td><td>Information provided does not match what is on file at bank.</td></tr><tr><td>1799</td><td>Declined by bank.</td></tr></tbody></table>"
        },
        "RiskDecisionCodeText": {
          "type": "string",
          "example": "Other payment(s) still in process.",
          "description": "Returns the description of the decision code from the decision engine when the transaction is denied or pended."
        },
        "RiskProbabilityIndex": {
          "type": "integer",
          "format": "int32",
          "example": "5",
          "description": "Returns the level of risk associated with accepting the requested transaction.<table><thead><tr><th>RiskProbabilityIndex</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>High Risk</td></tr><tr><td>2</td><td>Mild Risk</td></tr><tr><td>3</td><td>Average</td></tr><tr><td>4</td><td>Safe</td></tr><tr><td>5</td><td>Very Safe</td></tr></tbody></table>"
        },
        "RiskScore": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns the risk score associated with the transaction. Valid values are 0-100; the higher the score, the greater the fraud risk associated with the transaction. This score is only presented if the Fraud Score feature is enabled."
        },
        "RoutingNumberUpdate": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether the routing number has been corrected in the system.<table><thead><tr><th>RoutingNumberUpdate</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>No</td></tr><tr><td>1</td><td>Yes</td></tr></tbody></table>",
          "maxLength": 1
        }
      },
      "description": "CheckPaymentRequest_Response"
    },
    "Disposition_Request": {
      "type": "object",
      "title": "Disposition_Request",
      "required": [
        "AccountName",
        "Amount",
        "DispositionType",
        "Password",
        "PaymentID",
        "TransactionID"
      ],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>",
          "maxLength": 32
        },
        "Amount": {
          "type": "string",
          "example": "20.00",
          "description": "The amount of money to be confirmed for settlement. This amount must be less than or equal to the authorized amount.",
          "maxLength": 12
        },
        "DispositionComment": {
          "type": "string",
          "example": "Include a comment here",
          "description": "The text comments for the transaction.",
          "maxLength": 255
        },
        "DispositionType": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Informs our platform if the transaction was completed or cancelled.<table><thead><tr><th>DispositionType</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Sale complete.</td></tr><tr><td>2</td><td>Sale cancelled.</td></tr></tbody></table>"
        },
        "GuaranteeCD": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Indicates if our platform needs to guarantee the transaction.<table><thead><tr><th>GuaranteeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guarantee Payment.</td></tr><tr><td>2</td><td>Do Not Guarantee Payment.</td></tr></tbody></table>"
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a> used to authenticate with vSafe.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The identification number generated to track the transaction.",
          "maxLength": 12
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "Disposition_Request"
    },
    "Disposition_Response": {
      "type": "object",
      "title": "Disposition_Response",
      "required": [
        "PaymentID",
        "PaymentStatus",
        "ResponseCode",
        "ResponseText"
      ],
      "properties": {
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The identification number generated to track the transaction.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the disposition result.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>10</td><td>Successful payment.</td></tr><tr><td>33</td><td>Pre-Authorization declined by merchant.</td></tr><tr><td>34</td><td>Post-Authorization declined by merchant.</td></tr></tbody></table>"
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the Disposition API. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. </p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p></p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1035</td><td>Amount must be greater than 0</td></tr><tr><td>1037</td><td>Provided DispositionType and GuaranteeCD combination not supported</td></tr><tr><td>1062</td><td>Payment not found</td></tr><tr><td>1064</td><td>Payment not eligible for this API call</td></tr><tr><td>1065</td><td>Payment not eligible for requested DispositionType</td></tr><tr><td>1066</td><td>Payment not eligible for the requested guarantee code</td></tr><tr><td>1067</td><td>Parameter GuaranteeCD not applicable for the given payment</td></tr><tr><td>1090</td><td>Payment is already confirmed</td></tr><tr><td>1091</td><td>Payment not authorized</td></tr><tr><td>1092</td><td>Amount larger than original authorization</td></tr><tr><td>1093</td><td>Authorization is already expired</td></tr><tr><td>1094</td><td>Original transaction was from a different interface</td></tr><tr><td>1095</td><td>Card validation transaction cannot be confirmed</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid credit card number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>.",
          "maxLength": 1024
        }
      },
      "description": "Disposition_Response"
    },
    "GetPaymentDetail_Request": {
      "type": "object",
      "title": "GetPaymentDetail_Request",
      "required": ["AccountName", "Password"],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The platform-generated ID used to track the transaction. Provide either the PaymentID or the TransactionID in the request.",
          "maxLength": 12
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The merchant-generated ID used to track the transaction. Provide either the PaymentID or the TransactionID in the request.",
          "maxLength": 36
        }
      },
      "description": "GetPaymentDetail_Request"
    },
    "GetPaymentDetail_Response": {
      "type": "object",
      "title": "GetPaymentDetail_Response",
      "required": [
        "Amount",
        "PaymentID",
        "PaymentStatus",
        "ResponseCode",
        "ResponseText",
        "TransactionID"
      ],
      "properties": {
        "Amount": {
          "type": "string",
          "example": "132.54",
          "description": "Returns the amount of the transaction."
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": " The platform-generated ID used to track the transaction. Provide either the PaymentID or the TransactionID in the request."
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the authorization transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Bank denied.</td></tr><tr><td>10</td><td>Successful.</td></tr><tr><td>2</td><td>Fraud pended. This can occur with Guaranteed services.</td></tr><tr><td>3</td><td>Fraud denied. This can occur if our platform has determined that this transaction is too risky to process, or the customer is not reliable.</td></tr><tr><td>33</td><td>Pre-Authorization declined by merchant.</td></tr><tr><td>34</td><td>Post-Authorization declined by merchant.</td></tr><tr><td>35</td><td>Transaction's disposition status unknown.</td></tr><tr><td>4</td><td>Transaction canceled.</td></tr><tr><td>5</td><td>Authorized.</td></tr><tr><td>51</td><td>Pre-Authorization completed.</td></tr><tr><td>52</td><td>Post-Authorization completed.</td></tr><tr><td>6</td><td>Authorization communication error. The transaction did not complete. Re-run the transaction. If the problem persists, contact <a href = '/helpCenter' target = '_blank'>Support</a>.</td></tr><tr><td>61</td><td> Pre-Authorization communication failure. The transaction did not complete. Re-run the transaction. If the problem persists, contact <a href = '/helpCenter' target = '_blank'>Support</a>.</td></tr><tr><td>62</td><td>Post-Authorization communication failure. The transaction did not complete. Re-run the transaction. If the problem persists, contact <a href = '/helpCenter' target = '_blank'>Support</a>.</td></tr></tbody></table>"
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the GetPaymentDetail API. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete.</p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p><b>Note:</b> When non-zero response codes are returned, the response fields might not be returned correctly. Review the error messages associated with non-zero response codes and take appropriate steps to resolve the error conditions. Most of the non-zero response codes indicate a system configuration or integration issue. Before production deployment, you should resolve these issues during the testing phase.</p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1038</td><td>Provide value for either PaymentID or TransactionID</td></tr><tr><td>1062</td><td>Payment not found</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>. "
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "Returns the merchant's identification number created to track the status of the transaction."
        }
      },
      "description": "GetPaymentDetail_Response"
    },
    "GetSessionTags_Request": {
      "type": "object",
      "title": "GetSessionTags_Request",
      "required": ["AccountName", "Password", "TransactionID"],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a> used to authenticate with vSafe.",
          "maxLength": 32
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a> used to authenticate with vSafe.",
          "maxLength": 64
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "GetSessionTags_Request"
    },
    "GetSessionTags_Response": {
      "type": "object",
      "title": "GetSessionTags_Response",
      "required": ["OrgID", "ResponseCode", "ResponseText", "WebSessionID"],
      "properties": {
        "OrgID": {
          "type": "string",
          "example": "f33plvkc",
          "description": "Returns the organization identification number needed for the <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a> JavaScript."
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the GetSessionTags API. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. </p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p><b>Note:</b> When non-zero response codes are returned, the response fields might not be returned correctly. Review the error messages associated with non-zero response codes and take appropriate steps to resolve the error conditions.  Most of the non-zero response codes indicate a system configuration or integration issue. Before production deployment, you should resolve these issues during the testing phase.</p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1006</td><td>API (GetSessionTags) is not available.</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": " Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>."
        },
        "WebSessionID": {
          "type": "string",
          "example": "101_10",
          "description": "Returns the identification number assigned to the session that is needed for the <a href = '/device-fingerprinting' target = '_blank'>device fingerprinting</a> JavaScript."
        }
      },
      "description": "GetSessionTags_Response"
    },
    "GuaranteePayment_Request": {
      "type": "object",
      "title": "GuaranteePayment_Request",
      "required": [
        "AccountName",
        "GuaranteeCD",
        "Password",
        "PaymentID",
        "TransactionID"
      ],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "GuaranteeCD": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Indicates if our platform needs to guarantee the transaction.<table><thead><tr><th>GuaranteeCD</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guarantee Payment.</td></tr><tr><td>2</td><td>Do Not Guarantee Payment.</td></tr></tbody></table>"
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The identification number generated to track the transaction.",
          "maxLength": 12
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "GuaranteePayment_Request"
    },
    "GuaranteePayment_Response": {
      "type": "object",
      "title": "GuaranteePayment_Response",
      "required": [
        "PaymentGuaranteeStatus",
        "PaymentID",
        "ResponseCode",
        "ResponseText"
      ],
      "properties": {
        "PaymentGuaranteeStatus": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Returns our platform's decision to guarantee the payment.<table><thead><tr><th>PaymentGuaranteeStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Guaranteed Payment</td></tr><tr><td>2</td><td>Non-Guaranteed Payment</td></tr></tbody></table>"
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number to track the transaction.",
          "maxLength": 12
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Indicates success or failure in processing the API call. See <a href = '/response-codes' target = '_blank'>Response Codes Messages</a> for non-zero values. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. </p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p><b>Note:</b> When non-zero response codes are returned, the response fields might not be returned correctly. Review the error messages associated with non-zero response codes and take appropriate steps to resolve the error conditions. Most of the non-zero response codes indicate a system configuration or integration issue. Before production deployment, you should resolve these issues during the testing phase.</p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1062</td><td>Payment not found</td></tr><tr><td>1064</td><td>Payment not eligible for this API call</td></tr><tr><td>1066</td><td>Payment not eligible for the requested guarantee code</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>513</td><td>Parameter (name) cannot be undefined/null</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": " Returns the description of the error for non-zero response codes. See <a href = '/response-codes' target = '_blank'>Response Codes Messages</a> for non-zero values.",
          "maxLength": 1024
        }
      },
      "description": "GuaranteePayment_Response"
    },
    "ReversePaymentRequest_Request": {
      "type": "object",
      "title": "ReversePaymentRequest_Request",
      "required": [
        "AccountName",
        "Amount",
        "Password",
        "PaymentID",
        "TransactionID"
      ],
      "properties": {
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a>.",
          "maxLength": 32
        },
        "Amount": {
          "type": "string",
          "example": "100.00",
          "description": "The amount of money to be refunded.",
          "maxLength": 12
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "F995ECC8-B63A-4447-9D44-C65D868147",
          "description": "Returns the Customer ID provided by the merchant. When null or empty, nothing is returned.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "The original PaymentID from the transaction being refunded.",
          "maxLength": 12
        },
        "ReportingInformation": {
          "type": "string",
          "example": "<?xml version='1.0' encoding='UTF-8'?><PartnerReportingAttributes xmlns='http://www.trustvesta.com/ReportingAttributes' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.trustvesta.com/ReportingAttributes ReportingAttributes.xsd'><Parameter01>ReportingInformation</Parameter01></PartnerReportingAttributes>",
          "description": "The attribute-based XML blob that contains information the merchant wishes to report on for the specific transaction. The information does not affect processing. It is passed through to use in reporting and PRT search functionality.",
          "maxLength": 3000
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "ReversePaymentRequest_Request"
    },
    "ReversePaymentRequest_Response": {
      "type": "object",
      "title": "ReversePaymentRequest_Response",
      "required": ["ResponseCode", "ResponseText", "ReversalAction"],
      "properties": {
        "AvailableRefundAmount": {
          "type": "string",
          "example": "25.50",
          "description": "Returns the remaining amount available for a refund."
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "F995ECC8-B63A-4447-9D44-C65D868147",
          "description": "Returns the Customer ID provided by the merchant. When null or empty, nothing is returned.",
          "maxLength": 64
        },
        "PaymentAcquirerName": {
          "type": "string",
          "example": "Chase Paymentech",
          "description": "Returns the name of the acquirer that processed the transaction.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "3XNQCKULS",
          "description": "Returns the identification number created to track the transaction used for settlement and reconciliation.",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Returns the result of the reversal transaction.<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Void or Refund was rejected by the acquirer.</td></tr><tr><td>10</td><td>Void was successfully processed.</td></tr><tr><td>4</td><td>Auth was successfully voided.</td></tr><tr><td>6</td><td>Authorization communication error. The transaction did not complete. Re-run the transaction. If the problem persists, contact <a href = '/helpCenter' target = '_blank'>Support</a>.</td></tr></tbody></table>"
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See <a href = '/response-codes' target = '_blank'>Response Codes</a> for the possible non-zero code returned by the ReversePaymentRequest API. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. </p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p><b>Note:</b> When non-zero response codes are returned, the response fields might not be returned correctly. Review the error messages associated with non-zero response codes and take appropriate steps to resolve the error conditions. Most of the non-zero response codes indicate a system configuration or integration issue. Before production deployment, you should resolve these issues during the testing phase.</p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1062</td><td>Payment not found</td></tr><tr><td>1068</td><td>Refunds are not allowed for this partner</td></tr><tr><td>1096</td><td>Transaction already voided</td></tr><tr><td>1097</td><td>Refund amount exceeds the amount of the original transaction that is available for refund.</td></tr><tr><td>1098</td><td>Cannot reverse a card validation transaction</td></tr><tr><td>1099</td><td>Unable to refund an incomplete payment</td></tr><tr><td>1100</td><td>Unable to refund a non-charge transaction (ie. refunds/chargebacks/voids/validations)</td></tr><tr><td>1101</td><td>Cannot partially void/refund an incomplete payment</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes</a>. ",
          "maxLength": 1024
        },
        "ReversalAction": {
          "type": "integer",
          "format": "int32",
          "example": "2",
          "description": "Returns the action that occurred on the reversal transaction.<table><thead><tr><th>ReversalAction</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Void</td></tr><tr><td>2</td><td>Refund</td></tr><tr><td>3</td><td>Auth Hold Reversal</td></tr></tbody></table>"
        }
      },
      "description": "ReversePaymentRequest_Response"
    },
    "ValidateCheckAccountNumber_Request": {
      "type": "object",
      "title": "ValidateCheckAccountNumber_Request",
      "required": [
        "AccountHolderFirstName",
        "AccountHolderLastName",
        "AccountName",
        "AccountNumber",
        "AccountNumberIndicator",
        "BankRoutingNumber",
        "CheckType",
        "MerchantRoutingID",
        "Password",
        "PaymentSource",
        "TransactionID"
      ],
      "properties": {
        "AccountHolderAddressLine1": {
          "type": "string",
          "example": "1643 Main Ave",
          "description": "Check account owner's Address line 1",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderAddressLine2": {
          "type": "string",
          "example": "Suite 014",
          "description": "Check account owner's Address line 2",
          "maxLength": 30
        },
        "AccountHolderCity": {
          "type": "string",
          "example": "Port Kyleighburg",
          "description": "Check account owner's City",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountHolderCountryCode": {
          "type": "string",
          "example": "US",
          "description": "Check account owner's two-character country code. Use ISO-3166 official country codes",
          "minLength": 1,
          "maxLength": 2
        },
        "AccountHolderDateOfBirth": {
          "type": "string",
          "example": "1992-03-11",
          "description": "Check account owner's date of birth",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderFirstName": {
          "type": "string",
          "example": "John",
          "description": "Check account owner's first name",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderLastName": {
          "type": "string",
          "example": "Doe",
          "description": "Check account owner's last name",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPhoneNumber": {
          "type": "string",
          "example": "5548398623",
          "description": "Check account owner's telephone number",
          "minLength": 1,
          "maxLength": 20
        },
        "AccountHolderPostalCode": {
          "type": "string",
          "example": "83267",
          "description": "Check account owner's zip or postal code",
          "minLength": 1,
          "maxLength": 10
        },
        "AccountHolderRegion": {
          "type": "string",
          "example": "WV",
          "description": "Check account owner's region name. For US, use two-character state code",
          "minLength": 1,
          "maxLength": 30
        },
        "AccountName": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API username</a> used to authenticate",
          "maxLength": 32
        },
        "AccountNumber": {
          "type": "string",
          "example": "340001234527890",
          "description": "The account number or <a href = '/tokenization' target = '_blank'>token</a> of the check to be authorized.",
          "minLength": 4,
          "maxLength": 17
        },
        "AccountNumberIndicator": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The type of account number being sent to the API.<table><thead><tr><th>AccountNumberIndicator</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>eCheck account number</td></tr><tr><td>2</td><td>Temporary token</td></tr><tr><td>3</td><td>Permanent token</td></tr></tbody></table>",
          "maxLength": 1
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "323274458",
          "description": "The routing number for the financial institution associated with the checking account. Also known as Routing Transit Number (RTN).",
          "minLength": 9,
          "maxLength": 9
        },
        "CheckCompanyName": {
          "type": "string",
          "example": "Smoke Factory",
          "description": "The check account owner's company name, if the account is associated with a company.",
          "maxLength": 40
        },
        "CheckType": {
          "type": "string",
          "example": "S",
          "description": "The eCheck type used for the transaction.<table><thead><tr><th>CheckType</th><th>Description</th></tr> </thead><tbody><tr><td>C</td><td>Company check</td></tr><tr><td>P</td><td>Personal checking account</td></tr><tr><td>S</td><td>Savings account</td></tr></tbody></table>",
          "maxLength": 1
        },
        "MerchantRoutingID": {
          "type": "string",
          "example": "<Replace with your identification number associated with the merchant account.>",
          "description": "Key used to determine which merchant account to use",
          "maxLength": 30
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "F995ECC8-B63A-4447-9D44-C65D868147",
          "description": "The unique data element created to identify a customer, such as a billing account number.",
          "maxLength": 64
        },
        "Password": {
          "type": "string",
          "example": "<Replace with your API Account credentials>",
          "description": "<a href = '/api-credentials' target = '_blank'>API password</a>  associated with the account name",
          "maxLength": 64
        },
        "PaymentSource": {
          "type": "string",
          "example": "PPD",
          "description": "The source of the transaction.<table><thead><tr><th>PaymentSource</th><th>Description</th></tr> </thead><tbody><tr><td>PPD</td><td>PPD - Payment has been pre-arranged.</td></tr><tr><td>TEL</td><td>TEL - Payment has been taken over the phone.</td></tr><tr><td>WEB</td><td>WEB - Payment has been taken over the internet.</td></tr></tbody></table>",
          "maxLength": 3
        },
        "RiskInformation": {
          "type": "string",
          "example": "<riskinformation><item productcode=\"MRC1\" description=\"Matchbox Race Car\" price=\"50.00\" quantity=\"1\" extendedprice=\"6.99\" isvirtualgood=\"false\" /></riskinformation>",
          "description": "The XML string containing risk-related data. See the <a href = '/risk-information' target = '_blank'>Risk Information XML</a> and contact your Integration Specialist for details. Required if the merchant is indemnified."
        },
        "StoreCheckAccount": {
          "type": "boolean",
          "example": "1",
          "description": "Indicates if the check number needs to be exchanged for a <a href = '/tokenization' target = '_blank'>permanent token</a>."
        },
        "TransactionID": {
          "type": "string",
          "example": "SCQD-CGZT-BRVS-6KE2-VANB-Q9ZB-D5GJ",
          "description": "The identification number generated by your gateway/acquirer to track the transaction.",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "description": "ValidateCheckAccountNumber_Request"
    },
    "ValidateCheckAccountNumber_Response": {
      "type": "object",
      "title": "ValidateCheckAccountNumber_Response",
      "required": [
        "AccountLast4",
        "AcquirerResponseCode",
        "BankRoutingNumber",
        "CheckValidationDecision",
        "PaymentAcquirerName",
        "PaymentID",
        "PaymentStatus",
        "PermanentToken",
        "ResponseCode",
        "ResponseText",
        "RiskDecisionCode",
        "RiskDecisionCodeText",
        "RoutingNumberUpdate"
      ],
      "properties": {
        "AccountLast4": {
          "type": "number",
          "example": "7890",
          "description": "Returns the last four digits of the check number processed."
        },
        "AcquirerResponseCode": {
          "type": "string",
          "example": "0",
          "description": "Acquirer response code if available.",
          "maxLength": 3
        },
        "BankRoutingNumber": {
          "type": "number",
          "example": "BankRoutingNumber",
          "description": "Returns the new routing number for the payment number when <code>RoutingNumberUpdate=1</code>.",
          "maxLength": 9
        },
        "CheckValidationDecision": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Value that denotes the result of the check validation<table><thead><tr><th>CheckValidationDecision</th><th>Description</th></tr> </thead><tbody><tr><td>1</td><td>Accept, use as entered</td></tr><tr><td>2</td><td>Accept, Modify routing</td></tr><tr><td>3</td><td>Deny, routing number not found (retired)</td></tr><tr><td>4</td><td>Deny, routing number invalid (fraud)</td></tr></tbody></table>"
        },
        "PartnerCustomerKey": {
          "type": "string",
          "example": "F995ECC8-B63A-4447-9D44-C65D868147",
          "description": "Any unique data element used to identify customers (e.g., billing account number).",
          "maxLength": 64
        },
        "PaymentAcquirerName": {
          "type": "string",
          "example": "Chase Paymentech",
          "description": "Name of the acquirer that processed the payment.",
          "maxLength": 64
        },
        "PaymentID": {
          "type": "string",
          "example": "81394994349",
          "description": "Vesta transaction identifer used for settlement and reconcilation",
          "maxLength": 12
        },
        "PaymentStatus": {
          "type": "integer",
          "format": "int32",
          "example": "10",
          "description": "Value that denotes the result of the authorization request<table><thead><tr><th>PaymentStatus</th><th>Description</th></tr> </thead><tbody><tr><td>10</td><td>Successful Validation</td></tr><tr><td>3</td><td>vSafe Denied</td></tr><tr><td>6</td><td>Authorization communication failure.</td></tr></tbody></table>"
        },
        "PermanentToken": {
          "type": "string",
          "example": "340900000001016",
          "description": "Returns a <a href = '/tokenization' target = '_blank'>permanent token</a> for the credit/debit card number when <code>StoreCheckAccount=1</code>",
          "maxLength": 19
        },
        "ResponseCode": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Returns a 0 for success or a non-zero code for failure to process the API. See Response Codes for the possible non-zero code returned by the ValidateCheckAccountNumber API. <p>Each API call returns a numeric response code. If the response code is zero, the API transaction completed successfully without errors; however, the status of the transaction may not be complete. </p> <p>If the response code is non-zero, an error message is included with the response code.</p> <p><b>Note:</b> When non-zero response codes are returned, the response fields might not be returned correctly. Review the error messages associated with non-zero response codes and take appropriate steps to resolve the error conditions.  Most of the non-zero response codes indicate a system configuration or integration issue. Before production deployment, you should resolve these issues during the testing phase.</p><table><thead><tr><th>ResponseCode</th><th>Description</th></tr> </thead><tbody><tr><td>0</td><td>Success</td></tr><tr><td>1</td><td>General system failure</td></tr><tr><td>1001</td><td>Login failed</td></tr><tr><td>1005</td><td>Account not active</td></tr><tr><td>1006</td><td>Account not setup for this API call</td></tr><tr><td>1007</td><td>Account is not set up for Permanent Tokens</td></tr><tr><td>1009</td><td>Routing number invalid</td></tr><tr><td>1020</td><td>Routing number not found.</td></tr><tr><td>1030</td><td>Provide account holder name and complete address.</td></tr><tr><td>1031</td><td>Provide account holder address</td></tr><tr><td>1032</td><td>Provide account holder name.</td></tr><tr><td>1033</td><td>Parameter {Amount} exceeds maximum transaction amount of [MaxTransactionAmount].</td></tr><tr><td>1035</td><td>Amount must be greater than 0.</td></tr><tr><td>1039</td><td>Parameter {StoreCheckAccount} is invalid for AccountNumberIndicator.</td></tr><tr><td>1060</td><td>No acquirer available</td></tr><tr><td>1061</td><td>AccountNumber not found</td></tr><tr><td>1071</td><td>Unable to retrieve account details using Plaid Processor Token.</td></tr><tr><td>1106</td><td>The support guarantee eCheck payments using Plaid is not configured for merchant.</td></tr><tr><td>510</td><td>Parameter (name) is required</td></tr><tr><td>511</td><td>Parameter (name) exceeds max length of (value)</td></tr><tr><td>512</td><td>Parameter (name) is not a valid (value)</td></tr><tr><td>514</td><td>Parameter (name) is invalid.  Valid values are (valid values)</td></tr><tr><td>521</td><td>Parameter (name) is not a valid account number)</td></tr></tbody></table>"
        },
        "ResponseText": {
          "type": "string",
          "example": "Success",
          "description": "Returns a description for non-zero <a href = '/response-codes' target = '_blank'>Response Codes.</a>",
          "maxLength": 1024
        },
        "RiskDecisionCode": {
          "type": "integer",
          "format": "int32",
          "example": "1701",
          "description": "Returns the decision code from the decision engine when the transaction is denied or pended.<table><thead><tr><th>RiskDecisionCode</th><th>Description</th></tr> </thead><tbody><tr><td>1701</td><td>Score exceeds risk system thresholds.</td></tr><tr><td>1702</td><td>Insufficient information for risk system to approve.</td></tr><tr><td>1703</td><td>Insufficient checking account history.</td></tr><tr><td>1704</td><td>Suspended account.</td></tr><tr><td>1705</td><td>Payment method type is not accepted.</td></tr><tr><td>1706</td><td>Duplicate transaction.</td></tr><tr><td>1707</td><td>Other payment(s) still in process.</td></tr><tr><td>1708</td><td>SSN and/or address did not pass bureau validation.</td></tr><tr><td>1709</td><td>Exceeds check amount limit.</td></tr><tr><td>1710</td><td>High risk based upon checking account history (EWS).</td></tr><tr><td>1711</td><td>Declined due to ACH regulations.</td></tr><tr><td>1712</td><td>Information provided does not match what is on file at bank.</td></tr></tbody></table>"
        },
        "RiskDecisionCodeText": {
          "type": "string",
          "example": "RiskDecisionCodeText",
          "description": "Returns the description of the decision code from the decision engine when the transaction is denied or pended."
        },
        "RoutingNumberUpdate": {
          "type": "boolean",
          "example": "1",
          "description": "Returns whether the routing number has been corrected in the system."
        }
      },
      "description": "ValidateCheckAccountNumber_Response"
    }
  }
}
